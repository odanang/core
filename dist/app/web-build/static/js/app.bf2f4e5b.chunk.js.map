{"version":3,"sources":["theme.js","ui/Provider/Native.js","ui/User/Auth/Controller.js","ui/User/Auth/Short.js","ui/User/SignIn/Controller.js","ui/User/SignIn/Simple.js","ui/User/Create/Controller.js","ui/User/SignUp/Simple.js","ui/User/SignOut/Controller.js","ui/User/SignOut/Button.js","ui/User/List/Controller.js","ui/User/Item/Controller.js","ui/User/Suggest/Controller.js","ui/Relationship/Create/Controller.js","ui/Relationship/Create/Button.js","ui/User/Request/Controller.js","ui/Relationship/Update/Controller.js","ui/Relationship/Update/Button.js","ui/Relationship/Delete/Controller.js","ui/Relationship/Delete/Active.js","ui/Relationship/Delete/Delete.js","ui/User/Suggest/Suggest.js","ui/User/List/Count.js","ui/User/Friends/Controller.js","ui/User/Friends/Simple.js","ui/User/Search/Controller.js","ui/User/Search/Search.js","ui/User/SuggestFixed/Controller.js","ui/User/SuggestFixed/SuggestFixed.js","ui/User/Request/Request.js","ui/Post/Item/ImageOnly.js","ui/Post/List/SkeletonGrid.js","ui/Post/List/Controller.js","ui/Post/Grid/Controller.js","ui/Post/List/Grid.js","ui/Interactive/Comment/Create/Controller.js","ui/Interactive/Comment/Create/Simple.js","ui/Interactive/Comment/List/ToggleText.js","ui/Interactive/List/Controller.js","ui/Interactive/Item/Controller.js","ui/Interactive/Comment/Delete/Controller.js","ui/Interactive/Comment/Delete/Text.js","ui/Interactive/Reaction/Delete/Controller.js","ui/Interactive/Reaction/Create/Controller.js","ui/Interactive/Reaction/Create/Text.js","ui/Interactive/Reaction/Create/Button.js","ui/Interactive/Reaction/List/Controller.js","ui/Interactive/Reaction/List/TextWithCount.js","ui/Interactive/Reaction/List/IconTextWithCount.js","ui/Interactive/Comment/List/Controller.js","ui/Interactive/Comment/Item/Controller.js","ui/Interactive/Comment/List/Simple.js","ui/Interactive/Item/Simple.js","ui/Interactive/Comment/Item/Simple.js","ui/Interactive/Comment/List/ToggleButton.js","ui/Interactive/Comment/Update/Controller.js","ui/Album/List/Simple.js","ui/Album/Create/Button.js","ui/Upload/Image/List/Carousel.js","ui/Post/Item/Controller.js","ui/Post/Item/Simple.js","ui/Post/List/SkeletonSimple.js","ui/Post/List/Simple.js","ui/Post/Detail/SkeletonDetail.js","ui/Post/Detail/Controller.js","ui/Post/Detail/Detail.js","ui/Post/Create/Button.js","ui/Post/Create/Controller.js","ui/Post/Create/Simple.js","ui/Post/Update/Controller.js","ui/Post/Update/Text.js","ui/Post/Delete/Controller.js","ui/Post/Delete/Text.js","ui/User/Item/DetailSkeleton.js","ui/Relationship/List/Controller.js","ui/Field/index.js","ui/User/Item/Detail.js","ui/User/Update/Simple.js","ui/User/Update/Password.js","ui/Footer/Simple.js","pages/index.js","pages/SignIn.js","pages/Home.js","pages/User.js","pages/Post.js","pages/SignUp.js","pages/NewPost.js","pages/FriendSuggestion.js","pages/FriendRequest.js","pages/UserUpdate.js","pages/UpdatePassword.js","pages/Album.js","pages/EarlyAcess.js","pages/Friends.js","pages/Result.js","pages/Markdown.js","pages/Test.js","ui/Headers/Options.js","ui/Notification/Item/Simple.js","ui/Notification/List/Simple.js","ui/Notification/List/Toggle.js","ui/Headers/Search.js","ui/Headers/Simple.js","App.js","webpack:///./index.js?41f5"],"names":["theme","extendTheme","fonts","heading","body","mono","components","Text","baseStyle","color","fontFamily","defaultProps","size","sizes","lg","fontSize","md","sm","Input","Heading","USER_AUTH","gql","createApolloClient","domain","locale","uri","as","httpLink","HttpLink","headers","link","setContext","_","a","async","AsyncStorage","getItem","token","authorization","concat","cache","InMemoryCache","ApolloClient","ssrMode","window","apolloClients","existingApolloClient","name","mergeState","b","merge","arrayMerge","destinationArray","sourceArray","filter","d","every","s","isEqual","AuthContext","createContext","Stack","createNativeStackNavigator","Native","navigation","header","result","useQuery","loading","error","data","user","customTheme","DefaultTheme","colors","background","useEffect","useMemo","Provider","value","NavigationContainer","linking","Navigator","screenOptions","initialRouteName","screens","map","screen","index","Screen","key","component","auth","requires","includes","ProviderNative","props","pageProps","client","initialState","variables","_apolloClient","existingCache","extract","restore","initializeApollo","ApolloProvider","UserAuth","UI","useContext","Link","to","params","id","rounded","bgColor","p","px","_text","fontWeight","UserAuthShort","USER_SIGNIN","UserSignIn","useApolloClient","refetch","useMutation","onCompleted","setItem","console","log","clearStore","resetStore","navigate","onError","removeItem","on","signIn","phone","password","phoneRef","useRef","passwordRef","useState","inputError","setInputError","maxW","w","mx","mt","source","alt","my","textAlign","py","borderWidth","borderColor","bg","space","Label","ref","_focus","type","onPress","current","trim","length","isNaN","justifyContent","textDecoration","UserSignInSimple","USER_CREATE","UserCreateController","usernameRef","sex","setSex","mb","Group","accessibilityLabel","onChange","newValue","colorScheme","ml","username","UserSignUp","UserSignOut","status","signOut","e","leftIcon","UserSignOutButton","POST_LIST","UserList","first","where","allUsers","_allUsersMeta","count","POST_ITEM_ME","POST_ITEM","refetchUserItem","makeVar","UserItem","relationship","my_id","User","allPosts","allRelationships","_allRelationshipsMeta","posts","FRIEND_SUGGEST_LIST","UserSuggestRefetch","UserSuggest","allFriends","createdBy","push","friendsSuggest","ar","find","rm","RELATIONSHIP_CREATE","RelationshipCreate","toId","page","userItemRefetch","useReactiveVar","userSuggestRefetch","createRelationship","clickAddFriend","connect","isAccepted","RelationshipCreateButton","FRIEND_LIST","refetchUserRequest","RELATIONSHIP_UPDATE","RelationshipUpdate","children","userRequestRefetch","updateRelationship","clickAgree","relationshipUpdated","RelationshipUpdateButton","RELATIONSHIP_DELETE","RelationshipDelete","deleteRelationship","clickDetete","confirm","RelationshipDeleteActive","RelationshipDeleteDelete","flexWrap","minW","m","alignItems","avatar","publicUrl","UserListSuggest","UserListCount","maxw","pl","UserListSimple","SEARCH_USER","keyword","UserListSearch","FRIEND_SUGGEST_FIXED_LIST","slice","flex","UserListSuggestFixed","UserListRequest","item","position","images","file","backgroundSize","JSON","stringify","h","speed","viewBox","backgroundColor","foregroundColor","animate","x","y","rx","ry","width","height","PostListRefetch","PostListController","skip","sortBy","fetchMore","_allPostsMeta","getMore","updateQuery","previousResult","fetchMoreResult","GRID_POST","overflow","UserPosts","useRoute","COMMENT_CREATE","CommentCreate","interactive","content","setContent","display","flexDirection","placeholder","target","onSubmitEditing","comments","create","InteractionCommentCreateSimple","INTERACTIVE_LIST","INTERACTIVE_ITEM","InteractiveItem","allInteractives","Interactive","lengthComment","_commentsMeta","COMMENT_DELETE","CommentDelete","deleteInteractiveComment","comment","InteractionCommentCreateDelete","REACTION_DELETE","REACTION_CREATE_POST","REACTION_CREATE_COMMENT","ReactionCreate","reactionsList","reactionsCommentList","idMyInteractive","refetchInteractiveItem","refetchPostItem","onCreate","loading1","error1","data1","onDelete","loading2","error2","data2","createInteractiveReaction","deleteInteractiveReaction","createReaction","deleteReaction","idDel","arrReactions","reaction","idEmoij","userId","arrUserId","indexOf","isLike","setIsLike","likeHandle","reactions","emoji","prev","InteractionReactionCreateText","_hover","InteractionReactionCreateButton","ReactionListController","_allReactionsMeta","countLikeComment","allReactions","InteractionReactionListTextWithCount","InteractionReactionListIconTextWithCount","allInteractiveComments","InteractiveItemSimple","currentUser","open","stringCreatedAt","createdAt","dayjs","require","createdTime","now","format","Number","get","formatTimeCreate","lineHeight","my_interactive","_reactionsMeta","thumbnailUrl","isSaved","setIsSaved","saveHandle","urls","arrowStyles","top","opacity","currentSlide","setCurrentSlide","urlsCount","carouselStyle","direction","slide","boxSize","src","left","right","bottom","Array","from","setSlide","PostItem","Post","post","isModalOpen","setIsModalOpen","zIndex","PostDeleteText","image","borderBottomWidth","borderBottomColor","borderTopWidth","borderTopColor","PostItemSimple","cx","cy","r","PostListSimple","PostDetail","PostDetailSimple","POST_CREATE","PostCreate","postListRefetch","message","createPost","contentRef","event","PostCreateSimple","POST_DELETE","PostDelete","deletePost","style","paragraph","heading1","heading2","heading3","heading4","heading5","heading6","hr","marginBottom","bullet_list","ordered_list","list_item","textDecorationLine","blockquote","borderLeftWidth","margin","paddingHorizontal","paddingVertical","table","borderCollapse","thead","tbody","th","padding","tr","td","marginTop","Field","round","step","className","strongProps","pProps","mergeStyle","DetailSkeleton","mr","orientation","description","UserItemDetail","setUsername","setPhone","setDescription","passwordOldRef","passwordNewRef","passwordConfirmRef","passwordOld","passwordNew","passwordConfirm","pb","pr","options","title","prefixes","config","home","users","signup","newpost","friendsuggestion","friendrequest","userupdate","updatepassword","album","earlyaccess","friends","markdown","test","isOpenOptions","setIsOpenOptions","optionsHandler","notificationHandler","imgUrl","time","isOpenNotification","setIsOpenNotification","onKeyPress","route","back","safeAreaTop","pt","Options","HeaderSimple","App","Lexend_300Light","Lexend_400Regular","Lexend_500Medium","Lexend_600SemiBold","Lexend_700Bold","pages","AppRegistry","registerComponent","registerRootComponent"],"mappings":"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","file":"static/js/app.bf2f4e5b.chunk.js","sourcesContent":["import {\r\n  useFonts as fonts,\r\n  Lexend_300Light,\r\n  Lexend_400Regular,\r\n  Lexend_500Medium,\r\n  Lexend_600SemiBold,\r\n  Lexend_700Bold,\r\n} from \"@expo-google-fonts/lexend\";\r\nimport { extendTheme } from \"native-base\";\r\nexport const theme = extendTheme({\r\n  fonts: {\r\n    heading: \"Lexend\",\r\n    body: \"Lexend\",\r\n    mono: \"Lexend\",\r\n  },\r\n  components: {\r\n    Text: {\r\n      baseStyle: {\r\n        color: \"gray.800\",\r\n        fontFamily: \"Lexend_400Regular\",\r\n      },\r\n      defaultProps: { size: \"md\" },\r\n      sizes: {\r\n        lg: { fontSize: \"32px\" },\r\n        md: { fontSize: \"14px\" },\r\n        sm: { fontSize: \"12px\" },\r\n      },\r\n    },\r\n    Input: {\r\n      baseStyle: {\r\n        color: \"gray.800\",\r\n        fontFamily: \"Lexend_400Regular\",\r\n      },\r\n      defaultProps: { size: \"md\" },\r\n      sizes: {\r\n        lg: { fontSize: \"32px\" },\r\n        md: { fontSize: \"14px\" },\r\n        sm: { fontSize: \"12px\" },\r\n      },\r\n    },\r\n    Heading: {\r\n      baseStyle: {\r\n        color: \"gray.800\",\r\n        fontFamily: \"Lexend_400Regular\",\r\n      },\r\n      defaultProps: { size: \"lg\" },\r\n      sizes: {\r\n        lg: { fontSize: \"32px\" },\r\n        md: { fontSize: \"24px\" },\r\n        sm: { fontSize: \"20px\" },\r\n      },\r\n    },\r\n  },\r\n});\r\nexport function useFonts() {\r\n  return fonts({\r\n    Lexend_300Light,\r\n    Lexend_400Regular,\r\n    Lexend_500Medium,\r\n    Lexend_600SemiBold,\r\n    Lexend_700Bold,\r\n  });\r\n}\r\n","// react\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// important\r\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\r\nimport { ApolloClient, useQuery, gql } from \"@apollo/client\";\r\nimport { HttpLink, InMemoryCache, ApolloProvider } from \"@apollo/client\";\r\n//\r\nimport isEqual from \"lodash/isEqual\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport merge from \"deepmerge\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nexport const USER_AUTH = gql`\r\n  query {\r\n    user: authenticatedUser {\r\n      id\r\n      phone\r\n      name\r\n      email\r\n      avatar {\r\n        publicUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const APOLLO_STATE_PROP_NAME = \"__apollo_state__\";\r\nexport const VARIABLE_PROP_NAME = \"__variable__\";\r\n/**\r\n * @returns {ApolloClient}\r\n */\r\nfunction createApolloClient(domain = \"_\", locale = \"_\") {\r\n  const uri = \"https://odanang.net/admin/api\";\r\n  const as =\r\n    process.env.NODE_ENV === \"production\" ? domain : process.env.HOST_DEV;\r\n  const httpLink = new HttpLink({\r\n    uri,\r\n    headers: {\r\n      as, // HOST env for dev mode\r\n      locale,\r\n    },\r\n  });\r\n  const link = setContext(async (_, { headers }) => {\r\n    const token = await AsyncStorage.getItem(\"@token\");\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    };\r\n  }).concat(httpLink);\r\n\r\n  const cache = new InMemoryCache();\r\n  return new ApolloClient({\r\n    link,\r\n    ssrMode: typeof window === \"undefined\",\r\n    cache,\r\n  });\r\n}\r\nexport let apolloClients = {};\r\n/**\r\n * @returns {ApolloClient}\r\n */\r\nfunction existingApolloClient(name) {\r\n  return apolloClients[name];\r\n}\r\n\r\nfunction mergeState(a, b) {\r\n  return merge(a, b, {\r\n    arrayMerge: (destinationArray, sourceArray) => [\r\n      ...sourceArray,\r\n      ...destinationArray.filter((d) =>\r\n        sourceArray.every((s) => !isEqual(d, s)),\r\n      ),\r\n    ],\r\n  });\r\n}\r\n/**\r\n *\r\n * @param {*} initialState\r\n * @param {*} param1\r\n * @returns {ApolloClient}\r\n */\r\nexport function initializeApollo(initialState = null, variables = {}) {\r\n  const { domain = \"_\", locale = \"_\" } = variables;\r\n  const _apolloClient =\r\n    existingApolloClient(domain) || createApolloClient(domain, locale);\r\n  if (initialState) {\r\n    const existingCache = _apolloClient.cache.extract();\r\n    const data = mergeState(initialState, existingCache);\r\n    _apolloClient.cache.restore(data);\r\n  }\r\n  if (!apolloClients[domain]) apolloClients[domain] = _apolloClient;\r\n  return _apolloClient;\r\n}\r\nexport function getContextVar(context) {\r\n  const { locale, asPath } = context;\r\n  return {\r\n    domain: context.req ? context.req.headers.host : window.location.host,\r\n    locale,\r\n    asPath,\r\n  };\r\n}\r\nexport function getVariables(pageProps = {}) {\r\n  return pageProps[VARIABLE_PROP_NAME] || {};\r\n}\r\nexport function getApolloState(pageProps = {}) {\r\n  return pageProps[APOLLO_STATE_PROP_NAME];\r\n}\r\n\r\nexport const AuthContext = createContext();\r\nconst Stack = createNativeStackNavigator();\r\nfunction Native({ navigation, header }) {\r\n  var result = useQuery(USER_AUTH);\r\n  const { loading, error, data = {} } = result;\r\n  const { user = null } = data;\r\n  result.user = user;\r\n  const customTheme = {\r\n    ...DefaultTheme,\r\n    colors: {\r\n      ...DefaultTheme.colors,\r\n      background: \"rgb(255, 255, 255)\",\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    //console.log(\"navigation renderd\", user);\r\n  });\r\n  const screens = useMemo(\r\n    () => (\r\n      <AuthContext.Provider value={result}>\r\n        <NavigationContainer linking={navigation.linking} theme={customTheme}>\r\n          <Stack.Navigator\r\n            screenOptions={{\r\n              header,\r\n            }}\r\n            initialRouteName={navigation.initialRouteName}\r\n          >\r\n            {navigation.screens?.map((screen, index) => {\r\n              return (\r\n                <Stack.Screen\r\n                  {...screen}\r\n                  key={screen.name + index}\r\n                  component={\r\n                    !user && navigation.auth.requires.includes(screen.name)\r\n                      ? navigation.auth.component\r\n                      : screen.component\r\n                  }\r\n                />\r\n              );\r\n            })}\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </AuthContext.Provider>\r\n    ),\r\n    [user, loading],\r\n  );\r\n  return screens;\r\n}\r\nexport default function ProviderNative(props) {\r\n  const { pageProps = {}, navigation, header } = props;\r\n  const client = useMemo(() => initializeApollo(), [pageProps]);\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Native navigation={navigation} header={header} />\r\n    </ApolloProvider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { AuthContext } from \"../../Provider/Native\";\r\nexport default function UserAuth({ UI, navigation, ...props }) {\r\n  const { loading, error, data = {} } = useContext(AuthContext);\r\n  const { user = {} } = data;\r\n  return (\r\n    <UI\r\n      {...props}\r\n      navigation={navigation}\r\n      loading={loading}\r\n      error={error}\r\n      user={user}\r\n    />\r\n  );\r\n}\r\n","import { Button, Text } from \"native-base\";\r\nimport React from \"react\";\r\nimport UserAuth from \"./Controller\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\nfunction UI({ loading, error, user }) {\r\n  if (loading) return <Text></Text>;\r\n  if (!user) return <Text></Text>;\r\n  return (\r\n    <Link to={{ screen: \"users\", params: { id: user.id } }}>\r\n      <Button\r\n        rounded={8}\r\n        bgColor=\"gray.100\"\r\n        p=\"2\"\r\n        px=\"3\"\r\n        _text={{ color: \"gray.400\", fontWeight: \"600\" }}\r\n      >\r\n        {user.name}\r\n      </Button>\r\n    </Link>\r\n  );\r\n}\r\nexport default function UserAuthShort(props) {\r\n  return <UserAuth {...props} UI={UI} />;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useMutation, gql, useApolloClient, useQuery } from \"@apollo/client\";\r\nimport { AuthContext } from \"../../Provider/Native\";\r\nexport const USER_SIGNIN = gql`\r\n  mutation($phone: String, $password: String) {\r\n    user: authenticateUserWithPassword(phone: $phone, password: $password) {\r\n      token\r\n      item {\r\n        phone\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function UserSignIn({ UI, navigation }) {\r\n  const client = useApolloClient();\r\n  const { refetch } = useContext(AuthContext);\r\n  const [on, result = {}] = useMutation(USER_SIGNIN, {\r\n    onCompleted: async ({ user = {} }) => {\r\n      const { token } = user;\r\n      try {\r\n        await AsyncStorage.setItem(\"@token\", token);\r\n      } catch (e) {\r\n        console.log(\"User SignIn Error\", e);\r\n      } finally {\r\n        await client.clearStore();\r\n        await client.resetStore();\r\n        if (refetch) await refetch();\r\n        console.log('navigation.navigate(\"home\")');\r\n        await navigation.navigate(\"home\");\r\n      }\r\n    },\r\n    onError: async (error) => {\r\n      try {\r\n        await AsyncStorage.removeItem(\"@token\");\r\n      } catch (e) {\r\n      } finally {\r\n        await client.clearStore();\r\n        await client.resetStore();\r\n      }\r\n    },\r\n  });\r\n  const signIn = ({ phone, password }) => {\r\n    return on({ variables: { phone, password } });\r\n  };\r\n  const { loading, error, data = {} } = result;\r\n  const { user } = data;\r\n  return <UI signIn={signIn} loading={loading} error={error} user={user} />;\r\n}\r\n","import React, { Fragment, useRef, useState } from \"react\";\r\nimport UserSignIn from \"./Controller\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  HStack,\r\n  Image,\r\n} from \"native-base\";\r\n\r\nfunction UI({ signIn, loading, error, user, navigation }) {\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n\r\n  const phoneRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [inputError, setInputError] = useState(null);\r\n\r\n  const submitSignIn = () => {\r\n    setInputError(null);\r\n\r\n    const phone = phoneRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    // Validation phone number\r\n    if (\r\n      !phone.trim() ||\r\n      (!(phone.length === 10) && !(phone.length === 11)) ||\r\n      isNaN(phone)\r\n    ) {\r\n      setInputError(\"Kiểm tra lại số điện thoại\");\r\n      return;\r\n    }\r\n\r\n    // Validation password\r\n    if (password.trim().length < 8) {\r\n      setInputError(\"Độ dài mật khẩu ít nhất 8 kí tự\");\r\n      return;\r\n    }\r\n\r\n    if (!loading) signIn({ phone, password });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box maxW=\"370px\" w=\"full\" mx=\"auto\" mt=\"100px\">\r\n        <Image\r\n          source={{\r\n            uri:\r\n              \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632635691/favicon_gc42jc.svg\",\r\n          }}\r\n          alt=\"Kilogram logo\"\r\n          size=\"70px\"\r\n          mx=\"auto\"\r\n        />\r\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"20px\", \"24px\"]}>\r\n          Đăng nhập để tiếp tục\r\n        </Heading>\r\n        <Box\r\n          px=\"18px\"\r\n          py=\"30px\"\r\n          rounded=\"10px\"\r\n          borderWidth=\"1px\"\r\n          borderColor=\"gray.100\"\r\n          bg=\"gray.50\"\r\n        >\r\n          <VStack space=\"12px\">\r\n            <FormControl>\r\n              <FormControl.Label>Số điện thoại</FormControl.Label>\r\n              <Input\r\n                ref={phoneRef}\r\n                name=\"phone\"\r\n                bgColor=\"white\"\r\n                px=\"8px\"\r\n                py=\"6px\"\r\n                borderWidth=\"1\"\r\n                borderColor=\"gray.100\"\r\n                rounded=\"6px\"\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label>Mật khẩu</FormControl.Label>\r\n              <Input\r\n                ref={passwordRef}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                bgColor=\"white\"\r\n                px=\"8px\"\r\n                py=\"6px\"\r\n                borderWidth=\"1\"\r\n                borderColor=\"gray.100\"\r\n                rounded=\"6px\"\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            {!loading && (\r\n              <Button\r\n                onPress={submitSignIn}\r\n                rounded=\"8px\"\r\n                bgColor=\"green.500\"\r\n                p=\"8px\"\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                ĐĂNG NHẬP\r\n              </Button>\r\n            )}\r\n            {loading && (\r\n              <Button\r\n                rounded=\"8px\"\r\n                bgColor=\"green.500\"\r\n                p=\"8px\"\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                ĐANG TẢI ...\r\n              </Button>\r\n            )}\r\n          </VStack>\r\n        </Box>\r\n        <Box\r\n          mt=\"12px\"\r\n          p=\"14px\"\r\n          rounded=\"10px\"\r\n          borderWidth=\"1\"\r\n          borderColor=\"gray.100\"\r\n        >\r\n          <HStack justifyContent=\"center\">\r\n            <Text>Bạn chưa có tài khoản? </Text>\r\n            <Link to={{ screen: \"signup\" }}>\r\n              <Text color=\"green.500\" textDecoration=\"none\">\r\n                Tạo tài khoản\r\n              </Text>\r\n            </Link>\r\n          </HStack>\r\n        </Box>\r\n        {error && (\r\n          <Box\r\n            mt=\"12px\"\r\n            p=\"14px\"\r\n            rounded=\"10px\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              Sai số điện thoại hoặc mật khẩu\r\n            </Text>\r\n          </Box>\r\n        )}\r\n        {inputError && (\r\n          <Box\r\n            mt=\"12px\"\r\n            p=\"12px\"\r\n            rounded=\"10px\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              {inputError}\r\n            </Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function UserSignInSimple(props) {\r\n  return <UserSignIn {...props} UI={UI} />;\r\n}\r\n","import { useMutation, gql } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nexport const USER_CREATE = gql`\r\n  mutation($data: UserCreateInput) {\r\n    user: createUser(data: $data) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport default function UserCreateController({ UI, navigation }) {\r\n  const [on, { loading, error, data = {} }] = useMutation(USER_CREATE, {\r\n    onCompleted: ({ user }) => {\r\n      navigation.navigate(\"home\");\r\n    },\r\n    onError: (error) => {\r\n      console.log(\"onError\", error);\r\n    },\r\n  });\r\n  const { user } = data;\r\n  return <UI on={on} loading={loading} error={error} user={user} />;\r\n}\r\n","import React, { Fragment, useRef, useState } from \"react\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  HStack,\r\n  Image,\r\n  Radio,\r\n} from \"native-base\";\r\nimport Controller from \"../Create/Controller.js\";\r\nfunction UI({ loading, error, user, navigation, on }) {\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n\r\n  const usernameRef = useRef();\r\n  const phoneRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [sex, setSex] = useState(\"male\");\r\n  const [inputError, setInputError] = useState(null);\r\n\r\n  const clickSignUp = () => {\r\n    setInputError(null);\r\n    const username = usernameRef.current.value;\r\n    const phone = phoneRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    // Validation phone number\r\n    if (\r\n      !phone.trim() ||\r\n      (!(phone.length === 10) && !(phone.length === 11)) ||\r\n      isNaN(phone)\r\n    ) {\r\n      setInputError(\"Kiểm tra lại số điện thoại\");\r\n      return;\r\n    }\r\n\r\n    // Validation username\r\n    if (!username.trim() || !isNaN(username) || !username.includes(\" \")) {\r\n      setInputError(\"Kiểm tra lại họ và tên\");\r\n      return;\r\n    }\r\n\r\n    // Validation password\r\n    if (password.trim().length < 8) {\r\n      setInputError(\"Độ dài mật khẩu ít nhất 8 kí tự\");\r\n      return;\r\n    }\r\n\r\n    console.log(username, phone, password, sex);\r\n\r\n    // Sign up\r\n    if (!loading) {\r\n      on({ variables: { data: { name: username, phone, password } } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box maxW=\"370px\" w=\"full\" mx=\"auto\" mt=\"100px\">\r\n        <Image\r\n          source={{\r\n            uri:\r\n              \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632635691/favicon_gc42jc.svg\",\r\n          }}\r\n          alt=\"Kilogram logo\"\r\n          size=\"70px\"\r\n          mx=\"auto\"\r\n        />\r\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"20px\", \"24px\"]}>\r\n          Tạo tài khoản mới\r\n        </Heading>\r\n        <Box\r\n          px=\"18px\"\r\n          py=\"30px\"\r\n          rounded=\"10px\"\r\n          borderWidth=\"1px\"\r\n          borderColor=\"gray.100\"\r\n          bg=\"gray.50\"\r\n        >\r\n          <VStack space=\"12px\">\r\n            <FormControl>\r\n              <FormControl.Label>Số điện thoại</FormControl.Label>\r\n              <Input\r\n                ref={phoneRef}\r\n                name=\"phone\"\r\n                bgColor=\"white\"\r\n                px=\"8px\"\r\n                py=\"6px\"\r\n                borderWidth=\"1\"\r\n                borderColor=\"gray.100\"\r\n                rounded=\"6px\"\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label>Họ và tên</FormControl.Label>\r\n              <Input\r\n                ref={usernameRef}\r\n                name=\"username\"\r\n                bgColor=\"white\"\r\n                px=\"8px\"\r\n                py=\"6px\"\r\n                borderWidth=\"1\"\r\n                borderColor=\"gray.100\"\r\n                rounded=\"6px\"\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label>Mật khẩu</FormControl.Label>\r\n              <Input\r\n                ref={passwordRef}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                bgColor=\"white\"\r\n                px=\"8px\"\r\n                py=\"6px\"\r\n                borderWidth=\"1\"\r\n                borderColor=\"gray.100\"\r\n                rounded=\"6px\"\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl mb=\"8px\">\r\n              <FormControl.Label>Giới tính</FormControl.Label>\r\n              <Radio.Group\r\n                name=\"sex\"\r\n                accessibilityLabel=\"sex\"\r\n                value={sex}\r\n                onChange={(newValue) => {\r\n                  setSex(newValue);\r\n                }}\r\n              >\r\n                <HStack space=\"32px\">\r\n                  <Radio\r\n                    colorScheme=\"green\"\r\n                    size=\"sm\"\r\n                    value=\"male\"\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                  >\r\n                    <Text fontSize=\"13px\" ml=\"6px\">\r\n                      Nam\r\n                    </Text>\r\n                  </Radio>\r\n                  <Radio\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    colorScheme=\"green\"\r\n                    size=\"sm\"\r\n                    value=\"female\"\r\n                  >\r\n                    <Text fontSize=\"13px\" ml=\"6px\">\r\n                      Nữ\r\n                    </Text>\r\n                  </Radio>\r\n                  <Radio\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    colorScheme=\"green\"\r\n                    size=\"sm\"\r\n                    value=\"other\"\r\n                  >\r\n                    <Text fontSize=\"13px\" ml=\"6px\">\r\n                      Khác\r\n                    </Text>\r\n                  </Radio>\r\n                </HStack>\r\n              </Radio.Group>\r\n            </FormControl>\r\n            {!loading && (\r\n              <Button\r\n                onPress={clickSignUp}\r\n                rounded=\"8px\"\r\n                bgColor=\"green.500\"\r\n                p=\"8px\"\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                TẠO TÀI KHOẢN\r\n              </Button>\r\n            )}\r\n            {loading && (\r\n              <Button\r\n                rounded=\"8px\"\r\n                bgColor=\"green.500\"\r\n                p=\"8px\"\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                ĐANG TẢI ...\r\n              </Button>\r\n            )}\r\n          </VStack>\r\n        </Box>\r\n        <Box\r\n          mt=\"12px\"\r\n          p=\"14px\"\r\n          rounded=\"10px\"\r\n          borderWidth=\"1\"\r\n          borderColor=\"gray.100\"\r\n        >\r\n          <HStack justifyContent=\"center\">\r\n            <Text>Bạn đã có tài khoản? </Text>\r\n            <Link to={{ screen: \"home\" }}>\r\n              <Text color=\"green.500\" textDecoration=\"none\">\r\n                Đăng nhập ngay\r\n              </Text>\r\n            </Link>\r\n          </HStack>\r\n        </Box>\r\n        {error && (\r\n          <Box\r\n            mt=\"12px\"\r\n            p=\"14px\"\r\n            rounded=\"10px\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              Vui lòng sử dụng số điện thoại khác\r\n            </Text>\r\n          </Box>\r\n        )}\r\n        {inputError && (\r\n          <Box\r\n            mt=\"12px\"\r\n            p=\"12px\"\r\n            rounded=\"10px\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              {inputError}\r\n            </Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function UserSignUp(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useMutation, gql, useApolloClient, useQuery } from \"@apollo/client\";\r\nimport { AuthContext } from \"../../Provider/Native\";\r\nexport const USER_SIGNIN = gql`\r\n  mutation {\r\n    status: unauthenticateUser {\r\n      success\r\n    }\r\n  }\r\n`;\r\nexport default function UserSignOut({ UI, navigation }) {\r\n  const client = useApolloClient();\r\n  const auth = useContext(AuthContext);\r\n  const [on, result = {}] = useMutation(USER_SIGNIN, {\r\n    onCompleted: async ({ status }) => {\r\n      await client.clearStore();\r\n      await client.resetStore();\r\n      navigation.navigate(\"home\");\r\n    },\r\n    onError: (error) => {},\r\n  });\r\n  const { loading, error, data = {} } = result;\r\n  const { status } = data;\r\n  return (\r\n    <UI\r\n      signOut={on}\r\n      loading={loading}\r\n      error={error}\r\n      status={status}\r\n      auth={auth}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport UserSignOut from \"./Controller\";\r\nimport { Button, Text } from \"native-base\";\r\nimport { IoLogOut } from \"react-icons/io5\";\r\nfunction UI({ loading, error, signOut, navigation, auth }) {\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n  const clickSignOut = (e) => {\r\n    signOut();\r\n  };\r\n  return loading ? (\r\n    <Text></Text>\r\n  ) : (\r\n    <Button\r\n      onPress={clickSignOut}\r\n      bgColor=\"white\"\r\n      _text={{ color: \"gray.900\" }}\r\n      leftIcon={<IoLogOut color=\"#22c55e\" />}\r\n    >\r\n      <Text>Đăng xuất</Text>\r\n    </Button>\r\n  );\r\n}\r\nexport default function UserSignOutButton(props) {\r\n  return <UserSignOut {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n// export const POST_LIST = gql`\r\n//   query($first: Int, $where: UserWhereInput) {\r\n//     _allUsersMeta(where: $where) {\r\n//       count\r\n//     }\r\n//     allUsers(first: $first, where: $where) {\r\n//       id\r\n//       phone\r\n//       name\r\n//       avatar {\r\n//         publicUrl\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\nexport const POST_LIST = gql`\r\n  query($first: Int, $where: UserWhereInput) {\r\n    _allUsersMeta(where: $where) {\r\n      count\r\n    }\r\n    allUsers(first: $first, where: { isAdmin: true } ) {\r\n      id\r\n      phone\r\n      name\r\n      avatar {\r\n        publicUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function UserList({ UI, first = 4, where, ...props }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(POST_LIST, {\r\n    variables: { first, where },\r\n  });\r\n  const { allUsers = [], _allUsersMeta = {} } = data;\r\n  const [user = {}] = allUsers;\r\n  const { count } = _allUsersMeta;\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      allUsers={allUsers}\r\n      user={user}\r\n      count={count}\r\n      refetch={refetch}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\r\nimport { POST_LIST } from \"../List/Controller\";\r\nexport const POST_ITEM_ME = gql`\r\n  query($id: ID!) {\r\n    User(where: { id: $id }) {\r\n      id\r\n      phone\r\n      name\r\n      avatar {\r\n        publicUrl\r\n      }\r\n    }\r\n    allPosts(where: { createdBy: { id: $id } }) {\r\n      id\r\n    }\r\n    _allRelationshipsMeta(\r\n      where: {\r\n        OR: [\r\n          { OR: { to: { id: $id }, isAccepted: true } }\r\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\r\n        ]\r\n      }\r\n    ) {\r\n      count\r\n    }\r\n  }\r\n`;\r\nexport const POST_ITEM = gql`\r\n  query($id: ID!, $my_id: ID!) {\r\n    User(where: { id: $id }) {\r\n      id\r\n      phone\r\n      name\r\n      avatar {\r\n        publicUrl\r\n      }\r\n    }\r\n    allPosts(where: { createdBy: { id: $id } }) {\r\n      id\r\n    }\r\n    allRelationships(\r\n      where: {\r\n        OR: [\r\n          { OR: { createdBy: { id: $my_id }, to: { id: $id } } }\r\n          { OR: { createdBy: { id: $id }, to: { id: $my_id } } }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      isAccepted\r\n      createdBy {\r\n        id\r\n      }\r\n      to {\r\n        id\r\n      }\r\n    }\r\n    _allRelationshipsMeta(\r\n      where: {\r\n        OR: [\r\n          { OR: { to: { id: $id }, isAccepted: true } }\r\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\r\n        ]\r\n      }\r\n    ) {\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const refetchUserItem = makeVar(() => { });\r\n\r\nexport default function UserItem({ UI, where, id, my_id }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(\r\n    id && my_id ? POST_ITEM : id ? POST_ITEM_ME : POST_LIST,\r\n    {\r\n      variables:\r\n        id && my_id ? { id: id, my_id: my_id } : id ? { id } : { where },\r\n    }\r\n  );\r\n  const { allUsers, User } = data;\r\n  const [user] = allUsers || [User];\r\n  const { allPosts = [] } = data;\r\n  const { allRelationships = [] } = data;\r\n  const { _allRelationshipsMeta = {} } = data\r\n  const { count } = _allRelationshipsMeta;\r\n  var relationship;\r\n  if (allRelationships.length === 0) {\r\n    relationship = null;\r\n  } else {\r\n    relationship = allRelationships[0];\r\n  }\r\n  if (refetch) refetchUserItem(refetch);\r\n  return (\r\n    <UI\r\n      count={count}\r\n      loading={loading}\r\n      error={error}\r\n      user={user}\r\n      posts={allPosts}\r\n      relationship={relationship}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\r\nexport const FRIEND_SUGGEST_LIST = gql`\r\n  query($id: ID!) {\r\n    allRelationships(\r\n      where: {\r\n        OR: [\r\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\r\n          { OR: { createdBy: { id: $id }, isAccepted: false } }\r\n          { OR: { to: { id: $id }, isAccepted: true } }\r\n          { OR: { to: { id: $id }, isAccepted: false } }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      isAccepted\r\n      createdBy {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n      to {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n    }\r\n    _allUsersMeta {\r\n      count\r\n    }\r\n    allUsers {\r\n      id\r\n      phone\r\n      name\r\n      avatar {\r\n        publicUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const UserSuggestRefetch = makeVar(() => {});\r\n\r\nexport default function UserSuggest({ UI, id, ...props }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(FRIEND_SUGGEST_LIST, {\r\n    variables: { id },\r\n  });\r\n  const { allUsers = [], _allUsersMeta = {} } = data;\r\n  const [user = {}] = allUsers;\r\n  const { count } = _allUsersMeta;\r\n  const { allRelationships = [] } = data;\r\n  let allFriends = [];\r\n  allRelationships.map((relationship) => {\r\n    if (relationship?.createdBy?.id === id) allFriends.push(relationship?.to);\r\n    if (relationship?.to?.id === id) allFriends.push(relationship?.createdBy);\r\n  });\r\n  let friendsSuggest = [];\r\n  friendsSuggest = allUsers.filter(\r\n    (ar) => !allFriends.find((rm) => rm.id === ar.id || ar.id === id)\r\n  );\r\n  if (refetch) UserSuggestRefetch(refetch);\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      friendsSuggest={friendsSuggest}\r\n      user={user}\r\n      count={count}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\r\nimport { refetchUserItem } from \"../../User/Item/Controller\";\r\nimport { UserSuggestRefetch } from \"../../User/Suggest/Controller\";\r\n\r\nexport const RELATIONSHIP_CREATE = gql`\r\n  mutation($data: RelationshipCreateInput) {\r\n    createRelationship(data: $data) {\r\n      id\r\n      to {\r\n        id\r\n        name\r\n      }\r\n      createdBy {\r\n        id\r\n        name\r\n      }\r\n      isAccepted\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function RelationshipCreate({ UI, toId, page }) {\r\n  const userItemRefetch = useReactiveVar(refetchUserItem);\r\n  const userSuggestRefetch = useReactiveVar(UserSuggestRefetch);\r\n  const [on, { loading, error, data = {} }] = useMutation(RELATIONSHIP_CREATE, {\r\n    onCompleted: (data) => {\r\n      page === \"SF\" ? userSuggestRefetch() : userItemRefetch();\r\n    },\r\n  });\r\n  const clickAddFriend = () => {\r\n    on({\r\n      variables: {\r\n        data: {\r\n          to: {\r\n            connect: {\r\n              id: toId,\r\n            },\r\n          },\r\n          isAccepted: false,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const { createRelationship } = data;\r\n  return (\r\n    <UI\r\n      page={page}\r\n      loading={loading}\r\n      error={error}\r\n      clickAddFriend={clickAddFriend}\r\n      createRelationship={createRelationship}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ error, loading, clickAddFriend }) {\r\n  const clickHandler = (e) => {\r\n    clickAddFriend();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      _text={{ color: \"white\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\r\n      p=\"8px\"\r\n      rounded=\"8px\"\r\n      w=\"full\"\r\n      bgColor=\"green.500\"\r\n      onPress={clickHandler}\r\n    >\r\n      Thêm bạn bè\r\n    </Button>\r\n  );\r\n}\r\nexport default function RelationshipCreateButton(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n\r\n// A và B chưa kết bạn với nhau, A gửi lời mời kết bạn cho B, hoặc ngược lại\r\n","import React from \"react\";\r\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\r\nexport const FRIEND_LIST = gql`\r\n  query($id: ID!) {\r\n    allRelationships(where: { to: { id: $id }, isAccepted: false }) {\r\n      id\r\n      isAccepted\r\n      createdBy {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n      to {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const refetchUserRequest = makeVar(() => {});\r\n\r\nexport default function UserList({ UI, where, id, ...props }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(FRIEND_LIST, {\r\n    variables: { id },\r\n  });\r\n  const { allRelationships = [] } = data;\r\n  let allUsers = [];\r\n  allRelationships.map((relationship) => {\r\n    allUsers.push(relationship?.createdBy);\r\n  });\r\n  if (refetch) refetchUserRequest(refetch);\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      allUsers={allUsers}\r\n      refetch={refetch}\r\n      allRelationships={allRelationships}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\r\nimport { refetchUserItem } from \"../../User/Item/Controller\";\r\nimport { refetchUserRequest } from \"../../User/Request/Controller\";\r\n\r\nexport const RELATIONSHIP_UPDATE = gql`\r\n  mutation($id: ID!, $data: RelationshipUpdateInput) {\r\n    updateRelationship(id: $id, data: $data) {\r\n      id\r\n      to {\r\n        id\r\n        name\r\n      }\r\n      createdBy {\r\n        id\r\n        name\r\n      }\r\n      isAccepted\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function RelationshipUpdate({\r\n  UI,\r\n  children,\r\n  relationship,\r\n  id,\r\n  page,\r\n}) {\r\n  const userItemRefetch = useReactiveVar(refetchUserItem);\r\n  const userRequestRefetch = useReactiveVar(refetchUserRequest);\r\n  const [on, { loading, error, data = {} }] = useMutation(RELATIONSHIP_UPDATE, {\r\n    onCompleted: (data) => {\r\n      page=='FR' ? userRequestRefetch() : userItemRefetch();\r\n    },\r\n  });\r\n  const clickAgree = () => {\r\n    on({ variables: { id, data: { isAccepted: true } } });\r\n  };\r\n  const { updateRelationship } = data;\r\n  return (\r\n    <UI loading={loading} error={error} clickAgree={clickAgree} /> ||\r\n    children({ relationship, on, relationshipUpdated })\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ error, loading, clickAgree }) {\r\n  const clickHandler = (e) => {\r\n    if (!loading) clickAgree();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      _text={{ color: \"white\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\r\n      p=\"8px\"\r\n      rounded=\"8px\"\r\n      w=\"full\"\r\n      bgColor=\"green.500\"\r\n      onPress={clickHandler}\r\n    >\r\n      Đồng ý kết bạn\r\n    </Button>\r\n  );\r\n}\r\nexport default function RelationshipUpdateButton(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n\r\n// A đã tạo Relationship tới B, B chưa đồng ý (Relationship đang inActive)\r\n// B vào tường của A sẽ thấy nút này (đồng ý kết bạn)\r\n","import React from \"react\";\r\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\r\nimport { refetchUserItem } from \"../../User/Item/Controller\";\r\nimport { refetchUserRequest } from \"../../User/Request/Controller\";\r\n\r\nexport const RELATIONSHIP_DELETE = gql`\r\n  mutation($id: ID!) {\r\n    deleteRelationship(id: $id) {\r\n      id\r\n      isAccepted\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function RelationshipDelete({ UI, id , page}) {\r\n  const userItemRefetch = useReactiveVar(refetchUserItem);\r\n  const userRequestRefetch = useReactiveVar(refetchUserRequest);\r\n  const [on, { loading, error, data = {} }] = useMutation(RELATIONSHIP_DELETE, {\r\n    onCompleted: (data) => {\r\n      page=='FR' ? userRequestRefetch() : userItemRefetch();\r\n    },\r\n  });\r\n  const { deleteRelationship } = data;\r\n  const clickDetete = () => {\r\n    on({ variables: { id } });\r\n  };\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      clickDetete={clickDetete}\r\n      relationship={deleteRelationship}\r\n      id={id}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ error, loading, clickDetete }) {\r\n  const clickHandler = (e) => {\r\n    if (confirm(\"Bạn có chắc chắn muốn xoá hem?\") && !loading) clickDetete();\r\n\r\n    //if (!loading) clickDetete();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      _text={{ color: \"gray.400\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\r\n      p=\"8px\"\r\n      rounded=\"8px\"\r\n      w=\"full\"\r\n      bgColor=\"gray.100\"\r\n      onPress={clickHandler}\r\n    >\r\n      Xoá bạn bè\r\n    </Button>\r\n  );\r\n}\r\nexport default function RelationshipDeleteActive(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n\r\n// A đã tạo Relationship tới B, B đã đồng ý (cập nhật trạng thái Relationship là active)\r\n// A vào tường của B sẽ thấy nút \"xóa bạn\"\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ error, loading, clickDetete, id }) {\r\n  const clickHandler = (e) => {\r\n    if (confirm(\"Bạn có chắc chắn muốn xoá hem?\") && !loading) clickDetete();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      _text={{ color: \"gray.400\", fontSize: [\"13\", \"14\"], fontWeight: \"600\" }}\r\n      p=\"8px\"\r\n      rounded=\"8px\"\r\n      w=\"full\"\r\n      bgColor=\"gray.100\"\r\n      onPress={clickHandler}\r\n    >\r\n      Xoá lời mời\r\n    </Button>\r\n  );\r\n}\r\nexport default function RelationshipDeleteDelete(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n\r\n// A đã tạo Relationship tới B, B chưa đồng ý (Relationship đang inActive)\r\n// B vào tường A thấy nút \"xóa lời mời\"\r\n","import React, { useState } from \"react\";\r\nimport { HStack, VStack, Box, Image, Text, Divider } from \"native-base\";\r\nimport {\r\n  RelationshipCreateButton,\r\n  RelationshipDeleteDelete,\r\n} from \"../../Relationship\";\r\nimport Controller from \"./Controller\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\n\r\nfunction UI({ loading, error, friendsSuggest, count, refetch }) {\r\n  \r\n  return (\r\n    <VStack w=\"100%\">\r\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\r\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\r\n          Những người bạn có thể biết\r\n        </Text>\r\n      </Box>\r\n\r\n      <HStack\r\n        maxW=\"100%\"\r\n        mx=\"auto\"\r\n        w=\"100%\"\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"flex-start\"\r\n      >\r\n        {friendsSuggest.map((user) => (\r\n          <VStack\r\n            key={user.id}\r\n            p=\"12px\"\r\n            minW={[\"49%\", \"32%\", \"24%\"]}\r\n            m=\"0.5%\"\r\n            space={[\"4px\", \"6px\"]}\r\n            alignItems=\"center\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"gray.100\"\r\n            rounded=\"8px\"\r\n          >\r\n            <Box>\r\n              <Link to={{ screen: \"users\", params: { id: user.id } }}>\r\n                <Image\r\n                  source={{\r\n                    // uri:\r\n                    //   user?.avatar?.publicUrl &&\r\n                    //   \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/190312313_2943016239348813_282704590362946930_n_pc3vbb.jpg\",\r\n                    uri:\r\n                      \"https://odanang.net\" +\r\n                      (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\r\n                  }}\r\n                  alt={user.name}\r\n                  size=\"80px\"\r\n                  mx=\"auto\"\r\n                  mt=\"8px\"\r\n                  rounded=\"100\"\r\n                />\r\n              </Link>\r\n            </Box>\r\n            <Link to={{ screen: \"users\", params: { id: user.id } }}>\r\n              <Text fontWeight=\"600\" color=\"gray.700\">\r\n                {user.name}\r\n              </Text>\r\n            </Link>\r\n            <RelationshipCreateButton toId={user.id} page={'SF'} />\r\n          </VStack>\r\n        ))}\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\nexport default function UserListSuggest(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import { Text } from \"native-base\";\r\nimport React from \"react\";\r\nimport Controller from \"./Controller\";\r\nfunction UI({ count }) {\r\n  return (\r\n    <Text fontSize=\"inherit\" fontWeight=\"inherit\">\r\n      {count}\r\n    </Text>\r\n  );\r\n}\r\nexport { UI };\r\nexport default function UserListCount(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nexport const FRIEND_LIST = gql`\r\n  query($id: ID!) {\r\n    allRelationships(\r\n      where: {\r\n        OR: [\r\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\r\n          { OR: { to: { id: $id }, isAccepted: true } }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      isAccepted\r\n      createdBy {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n      to {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function UserList({ UI, where, id, ...props }) {\r\n  const { loading, error, data = {}, refetch  } = useQuery(FRIEND_LIST, {\r\n    variables: { id },\r\n  });\r\n  const { allRelationships = [] } = data;\r\n  let allUsers = []\r\n  allRelationships.map((relationship) => {\r\n    if (relationship?.createdBy?.id === id) allUsers.push(relationship?.to)\r\n    if (relationship?.to?.id === id) allUsers.push(relationship?.createdBy)\r\n  })\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      allUsers={allUsers}\r\n      refetch={refetch}\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { HStack, VStack, Box, Image, Text, Divider } from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  RelationshipCreateButton,\r\n  RelationshipDeleteDelete,\r\n  RelationshipUpdateButton,\r\n  RelationshipDeleteActive,\r\n  RelationshipDeleteCancel,\r\n} from \"../../Relationship\";\r\nimport Controller from \"../Friends/Controller\";\r\n// Fetch 12 items\r\n\r\nfunction UI({ loading, error, allUsers }) {\r\n  return (\r\n    <VStack>\r\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\r\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\r\n          Tất cả bạn bè\r\n        </Text>\r\n      </Box>\r\n\r\n      <HStack\r\n        maxw=\"full\"\r\n        mx=\"auto\"\r\n        w=\"full\"\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"flex-start\"\r\n      >\r\n        {allUsers.map((user) => (\r\n          <HStack\r\n            key={user.id}\r\n            p=\"12px\"\r\n            pl={[\"8px\", \"12px\"]}\r\n            minW={[\"100%\", \"99%\", \"49%\"]}\r\n            m=\"0.5%\"\r\n            mx={[\"0\", \"0.5%\"]}\r\n            space={[\"0\", \"6px\"]}\r\n            alignItems=\"center\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"gray.100\"\r\n            rounded=\"8px\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <HStack alignItems=\"center\" space={[\"12px\", \"16px\"]}>\r\n              <Box>\r\n                <Link to={{ screen: \"users\", params: { id: user?.id } }} >\r\n                  <Image\r\n                    source={{\r\n                      uri:\r\n                        \"https://odanang.net\" +\r\n                        (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\r\n                    }}\r\n                    alt=\"Profile Image\"\r\n                    size={[\"48px\", \"72px\"]}\r\n                    mx=\"auto\"\r\n                    my={[\"10px\", \"6px\"]}\r\n                    rounded=\"100\"\r\n                  />\r\n                </Link>\r\n              </Box>\r\n              <Link to={{ screen: \"users\", params: { id: user?.id } }} >\r\n                <Text my=\"8px\" fontWeight=\"600\">\r\n                  {user.name}\r\n                </Text>\r\n              </Link>\r\n            </HStack>\r\n            {/* {item.type === \"pending\" && (\r\n              <VStack space=\"6px\">\r\n                <Box w=\"120px\">\r\n                  <RelationshipUpdateButton />\r\n                </Box>\r\n                <Box w=\"120px\">\r\n                  <RelationshipDeleteDelete />\r\n                </Box>\r\n              </VStack>\r\n            )}\r\n            {item.type === \"no\" && (\r\n              <Box w=\"120px\">\r\n                <RelationshipCreateButton />\r\n              </Box>\r\n            )}\r\n            {item.type === \"yes\" && (\r\n              <Box w=\"120px\">\r\n                <RelationshipDeleteActive />\r\n              </Box>\r\n            )}\r\n            {item.type === \"sending\" && (\r\n              <Box w=\"120px\">\r\n                <RelationshipDeleteCancel />\r\n              </Box>\r\n            )} */}\r\n          </HStack>\r\n        ))}\r\n      </HStack>\r\n    </VStack >\r\n  );\r\n}\r\nexport { UI };\r\nexport default function UserListSimple(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nexport const SEARCH_USER = gql`\r\n  query($keyword: String) {\r\n    allUsers(\r\n      where: {\r\n        OR: [\r\n          { OR: { name_contains_i: $keyword } }\r\n          { OR: { phone_contains: $keyword } }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      phone\r\n      name\r\n      avatar {\r\n        publicUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const RELATIONSHIP = gql`\r\n  query($my_id: ID!, $id: ID!) {\r\n    allRelationships(\r\n      where: {\r\n        OR: [\r\n          { OR: { createdBy: { id: $my_id }, to: { id: $id } } }\r\n          { OR: { createdBy: { id: $id }, to: { id: $my_id } } }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      isAccepted\r\n      createdBy {\r\n        id\r\n      }\r\n      to {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function UserList({ UI, keyword, my_id }) {\r\n  const { loading, error, data = {} } = useQuery(SEARCH_USER, {\r\n    variables: { keyword },\r\n  });\r\n  const { allUsers = [] } = data;\r\n  // let relationship = []\r\n  // allUsers.map((user) => {\r\n  //   const { loading, error, data = {} } = useQuery(RELATIONSHIP, {\r\n  //     variables: { id: user.id, my_id: my_id },\r\n  //   });\r\n  //   const { allRelationships = [] } = data;\r\n  //   if (allRelationships.length === 0) {\r\n  //     relationship.push(null)\r\n  //   } else {\r\n  //     relationship.push(allRelationships[0])\r\n  //   }\r\n  // })\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      allUsers={allUsers}\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { HStack, VStack, Box, Image, Text, Divider } from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  RelationshipCreateButton,\r\n  RelationshipDeleteDelete,\r\n  RelationshipUpdateButton,\r\n  RelationshipDeleteActive,\r\n  RelationshipDeleteCancel,\r\n} from \"../../Relationship\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ loading, error, allUsers }) {\r\n  return (\r\n    <VStack>\r\n      <HStack\r\n        maxw=\"full\"\r\n        mx=\"auto\"\r\n        w=\"full\"\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"flex-start\"\r\n      >\r\n        {allUsers.map((user) => (\r\n          <HStack\r\n            key={user.id}\r\n            p={[\"3\", \"4\"]}\r\n            pl={[\"2\", \"4\"]}\r\n            minW={[\"100%\", \"99%\"]}\r\n            m={[\"0\", \"0.5%\"]}\r\n            my=\"1\"\r\n            space={[\"0\", \"1.5\"]}\r\n            alignItems=\"center\"\r\n            borderWidth=\"1\"\r\n            borderColor=\"gray.100\"\r\n            rounded={[\"0\", \"xl\"]}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <HStack alignItems=\"center\" space={[\"3\", \"4\"]}>\r\n              <Link to={{ screen: \"users\", params: { id: user.id } }}>\r\n                <Box>\r\n                  <Image\r\n                    source={{\r\n                      uri:\r\n                        \"https://odanang.net\" +\r\n                        (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\r\n                    }}\r\n                    alt=\"Profile Image\"\r\n                    size={[\"48px\", \"72px\"]}\r\n                    mx=\"auto\"\r\n                    my={[\"2.5\", \"1.5\"]}\r\n                    rounded=\"100\"\r\n                  />\r\n                </Box>\r\n              </Link>\r\n              <Link to={{ screen: \"users\", params: { id: user.id } }}>\r\n                <Text my=\"2\" fontWeight=\"600\">\r\n                  {user.name}\r\n                </Text>\r\n              </Link>\r\n            </HStack>\r\n            {/* {item.type === \"pending\" && (\r\n              <VStack space=\"1.5\">\r\n                <Box w=\"120px\">\r\n                  <RelationshipUpdateButton />\r\n                </Box>\r\n                <Box w=\"120px\">\r\n                  <RelationshipDeleteDelete />\r\n                </Box>\r\n              </VStack>\r\n            )}\r\n            {item.type === \"no\" && (\r\n              <Box w=\"120px\">\r\n                <RelationshipCreateButton />\r\n              </Box>\r\n            )}\r\n            {item.type === \"yes\" && (\r\n              <Box w=\"120px\">\r\n                <RelationshipDeleteActive />\r\n              </Box>\r\n            )}\r\n            {item.type === \"sending\" && (\r\n              <Box w=\"120px\">\r\n                <RelationshipDeleteCancel />\r\n              </Box>\r\n            )} */}\r\n          </HStack>\r\n        ))}\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\nexport { UI };\r\nexport default function UserListSearch(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nexport const FRIEND_SUGGEST_FIXED_LIST = gql`\r\n  query($id: ID!) {\r\n    allRelationships(\r\n      where: {\r\n        OR: [\r\n          { OR: { createdBy: { id: $id }, isAccepted: true } }\r\n          { OR: { createdBy: { id: $id }, isAccepted: false } }\r\n          { OR: { to: { id: $id }, isAccepted: true } }\r\n          { OR: { to: { id: $id }, isAccepted: false } }\r\n        ]\r\n      }\r\n    ) {\r\n      id\r\n      isAccepted\r\n      createdBy {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n      to {\r\n        id\r\n        phone\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n    }\r\n    _allUsersMeta {\r\n      count\r\n    }\r\n    allUsers {\r\n      id\r\n      phone\r\n      name\r\n      avatar {\r\n        publicUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function UserList({ UI, id, ...props }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(FRIEND_SUGGEST_FIXED_LIST, {\r\n    variables: { id },\r\n  });\r\n  const { allUsers = [], _allUsersMeta = {} } = data;\r\n  const [user = {}] = allUsers;\r\n  const { count } = _allUsersMeta;\r\n  const { allRelationships = [] } = data;\r\n  let allFriends = []\r\n  allRelationships.map((relationship) => {\r\n    if (relationship?.createdBy?.id === id) allFriends.push(relationship?.to)\r\n    if (relationship?.to?.id === id) allFriends.push(relationship?.createdBy)\r\n  })\r\n  let friendsSuggest = []\r\n  friendsSuggest = allUsers.filter(ar => !allFriends.find(rm => (rm.id === ar.id || ar.id === id)));\r\n  friendsSuggest = friendsSuggest.slice(0, 4);\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      friendsSuggest={friendsSuggest}\r\n      user={user}\r\n      count={count}\r\n      refetch={refetch}\r\n    />\r\n  );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { HStack, VStack, Box, Image, Text, Heading, Spacer } from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ friendsSuggest }) {\r\n  return (\r\n    <VStack my=\"2\" w=\"full\">\r\n      <HStack mb=\"2\" w=\"full\">\r\n        <Text fontSize=\"16\" fontWeight=\"600\" color=\"gray.400\">\r\n          Gợi ý cho bạn\r\n        </Text>\r\n        <Spacer />\r\n        <Link to={{ screen: \"friendsuggestion\" }}>\r\n          <Text color=\"green.500\">Xem thêm</Text>\r\n        </Link>\r\n      </HStack>\r\n\r\n      {friendsSuggest?.map((user) => (\r\n        <HStack\r\n          key={user.id}\r\n          m=\"1\"\r\n          mt=\"3\"\r\n          flex=\"1\"\r\n          maxw=\"full\"\r\n          w=\"260px\"\r\n          alignItems=\"center\"\r\n          rounded=\"8\"\r\n          space=\"4\"\r\n        >\r\n          <Box>\r\n            <Image\r\n              source={{\r\n                uri:\r\n                  \"https://odanang.net\" +\r\n                  (user?.avatar ? user.avatar.publicUrl : \"/upload/img/no-image.png\"),\r\n              }}\r\n              alt=\"img\"\r\n              size=\"8\"\r\n              mx=\"auto\"\r\n              rounded=\"100\"\r\n            />\r\n          </Box>\r\n          <Link to={{ screen: \"users\", params: { id: user.id } }}>\r\n            <Text fontWeight=\"600\" color=\"gray.700\">\r\n              {user.name}\r\n            </Text>\r\n          </Link>\r\n        </HStack>\r\n      ))}\r\n    </VStack>\r\n  );\r\n}\r\nexport default function UserListSuggestFixed(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { HStack, VStack, Box, Image, Text, Divider } from \"native-base\";\r\nimport {\r\n  RelationshipUpdateButton,\r\n  RelationshipDeleteDelete,\r\n} from \"../../Relationship\";\r\nimport Controller from \"./Controller\";\r\nfunction UI({ loading, error, allRelationships }) {\r\n  if (loading) return \"loading\";\r\n  if (error) return \"error\";\r\n  return (\r\n    <VStack w=\"100%\">\r\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\r\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\r\n          Lời mời kết bạn\r\n        </Text>\r\n      </Box>\r\n\r\n      <HStack\r\n        maxW=\"full\"\r\n        mx=\"auto\"\r\n        w=\"full\"\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"flex-start\"\r\n      >\r\n        {allRelationships.map((relationship) => (\r\n          <VStack\r\n            key={relationship.id}\r\n            p=\"12px\"\r\n            minW={[\"49%\", \"32%\", \"24%\"]}\r\n            m=\"0.5%\"\r\n            space={[\"4px\", \"6px\"]}\r\n            alignItems=\"center\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"gray.100\"\r\n            rounded=\"8px\"\r\n          >\r\n            <Box>\r\n              <Image\r\n                source={{\r\n                  uri:\r\n                    \"https://odanang.net\" +\r\n                    (relationship?.createdBy?.avatar?.publicUrl ||\r\n                      \"/upload/img/no-image.png\"),\r\n                }}\r\n                alt=\"Profile Image\"\r\n                size=\"80px\"\r\n                mx=\"auto\"\r\n                mt=\"8px\"\r\n                rounded=\"100\"\r\n              />\r\n            </Box>\r\n            <Text my=\"8px\" fontWeight=\"600\">\r\n              {relationship?.createdBy?.name}\r\n            </Text>\r\n            <RelationshipUpdateButton id={relationship.id} page={\"FR\"} />\r\n            <RelationshipDeleteDelete id={relationship.id} page={\"FR\"}/>\r\n          </VStack>\r\n        ))}\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\nexport { UI };\r\nexport default function UserListRequest(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { Button, Box, Image } from \"native-base\";\r\n\r\nfunction UI({ item }) {\r\n  const singlePostHandler = () => {\r\n    //console.log(item.id, item.link, item.thumbnailUrl);\r\n    console.log(item.id, JSON.stringify(item.images));\r\n  };\r\n\r\n  return (\r\n    <Box w=\"full\" position=\"relative\">\r\n      {/* <Image\r\n        source={{\r\n          uri: item.thumbnailUrl,\r\n        }}\r\n        alt=\"Profile Image\"\r\n        backgroundSize=\"cover\"\r\n        flex=\"1\"\r\n        p=\"50%\"\r\n      /> */}\r\n      <Image\r\n        source={{\r\n          uri:\r\n            \"https://odanang.net\" +\r\n            (item?.images[0]?.file?.publicUrl || \"/upload/img/no-image.png\"),\r\n        }}\r\n        alt=\"Profile Image\"\r\n        backgroundSize=\"cover\"\r\n        flex=\"1\"\r\n        p=\"50%\"\r\n      />\r\n      <Button\r\n        onPress={singlePostHandler}\r\n        position=\"absolute\"\r\n        w=\"full\"\r\n        h=\"100%\"\r\n        bgColor=\"transparent\"\r\n      ></Button>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { Rect } from \"react-content-loader/native\";\r\nimport { Box } from \"native-base\";\r\n\r\nfunction UI(props) {\r\n  return (\r\n    <Box maxW=\"1005\" w=\"full\" mx=\"auto\" p=\"1%\">\r\n      <ContentLoader\r\n        speed=\"1\"\r\n        w=\"full\"\r\n        mx=\"auto\"\r\n        viewBox=\"0 0 1005 310\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        animate=\"true\"\r\n      >\r\n        <Rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"325\" height=\"300\" />\r\n        <Rect x=\"340\" y=\"0\" rx=\"10\" ry=\"10\" width=\"325\" height=\"300\" />\r\n        <Rect x=\"680\" y=\"0\" rx=\"10\" ry=\"10\" width=\"325\" height=\"300\" />\r\n      </ContentLoader>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\r\nexport const POST_LIST = gql`\r\n  query(\r\n    $first: Int\r\n    $skip: Int\r\n    $sortBy: [SortPostsBy!]\r\n    $where: PostWhereInput\r\n  ) {\r\n    _allPostsMeta(where: $where) {\r\n      count\r\n    }\r\n    allPosts(first: $first, skip: $skip, sortBy: $sortBy, where: $where) {\r\n      id\r\n      content\r\n      tags {\r\n        content\r\n      }\r\n      images {\r\n        file {\r\n          publicUrl\r\n        }\r\n      }\r\n      interactive {\r\n        comments {\r\n          content\r\n        }\r\n        reactions {\r\n          emoji\r\n        }\r\n      }\r\n      createdBy {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const PostListRefetch = makeVar(() => {});\r\n\r\nexport default function PostListController({\r\n  UI,\r\n  first = 20,\r\n  skip,\r\n  sortBy = 'createdAt_DESC',\r\n  where,\r\n  ...props\r\n}) {\r\n  const { loading, error, data = {}, fetchMore, refetch } = useQuery(\r\n    POST_LIST,\r\n    {\r\n      variables: { first, where, skip, sortBy },\r\n    }\r\n  );\r\n  const { allPosts, _allPostsMeta = {} } = data;\r\n  const { count = 0 } = _allPostsMeta;\r\n\r\n  function getMore(e) {\r\n    if (loading || error) return;\r\n    if (count <= allPosts.length) return;\r\n    fetchMore({\r\n      variables: { skip: allPosts.length },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        return {\r\n          ...previousResult,\r\n          allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts],\r\n        };\r\n      },\r\n    });\r\n  }\r\n  if (refetch) PostListRefetch(refetch);\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      allPosts={allPosts}\r\n      getMore={getMore}\r\n      count={count}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { POST_LIST } from \"../List/Controller\";\r\n\r\nexport const GRID_POST = gql`\r\n  query($id: ID!) {\r\n    allPosts(sortBy: createdAt_DESC, where: { createdBy: { id: $id } }) {\r\n      id\r\n      images {\r\n        file {\r\n          publicUrl\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function UserItem({ UI, id }) {\r\n\r\n  const { loading, error, data = {} } = useQuery(GRID_POST, { variables: { id } });\r\n  const { allPosts = [] } = data;\r\n  return <UI loading={loading} error={error} posts={allPosts} />;\r\n}\r\n","import React from \"react\";\r\nimport { HStack, Box } from \"native-base\";\r\nimport PostItemImageOnly from \"../Item/ImageOnly\";\r\nimport PostItemSkeletonGrid from \"./SkeletonGrid\";\r\nimport Controller from \"../../Post/Grid/Controller\"\r\nimport { useRoute } from \"@react-navigation/core\";\r\nimport { Link } from \"@react-navigation/native\";\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://vcdn1-dulich.vnecdn.net/2018/10/27/home-venice-italy.jpg?w=1200&h=0&q=100&dpr=1&fit=crop&s=PnlZagm9qKzpioNh9CVmUA\",\r\n  },\r\n  {\r\n    id: 2,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632806027/241259419_246687107340299_4139464774758156957_n_s1zuao.jpg\",\r\n  },\r\n  {\r\n    id: 3,\r\n    link: \"#\",\r\n    thumbnailUrl: \"https://static.toiimg.com/photo/84475061.cms\",\r\n  },\r\n  {\r\n    id: 4,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"http://tonyenglish.vn/uploads/news/2019/0106/1546787257_MW-GY949_travel_20181122135819_ZH.jpg\",\r\n  },\r\n  {\r\n    id: 5,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/190312313_2943016239348813_282704590362946930_n_pc3vbb.jpg\",\r\n  },\r\n  {\r\n    id: 6,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://tuandungtravel.com/wp-content/uploads/2019/07/du-lich-ba-na-hills-tuan-dung-travel-9.jpg\",\r\n  },\r\n];\r\n\r\nfunction UI({ error, loading, posts }) {\r\n  // if (loading) {\r\n  //   return <PostItemSkeletonGrid />;\r\n  // }\r\n  if (loading) return <PostItemSkeletonGrid />;\r\n  if (error) return \"error\";\r\n  return (\r\n    // <HStack maxw=\"full\" w=\"full\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n    //   {data.map((item) => (\r\n    //     <Box\r\n    //       key={item.id}\r\n    //       minW={[\"49%\", \"32%\", \"24%\"]}\r\n    //       m=\"0.5%\"\r\n    //       borderWidth=\"1\"\r\n    //       borderColor=\"gray.100\"\r\n    //       rounded=\"10\"\r\n    //       overflow=\"hidden\"\r\n    //     >\r\n    //       <PostItemImageOnly key={item.id} item={item} />\r\n    //     </Box>\r\n    //   ))}\r\n    // </HStack>\r\n    <HStack maxw=\"full\" w=\"full\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n      {posts.map((item) => (\r\n\r\n        <Box\r\n          key={item.id}\r\n          minW={[\"49%\", \"32%\", \"24%\"]}\r\n          m=\"0.5%\"\r\n          borderWidth=\"1\"\r\n          borderColor=\"gray.100\"\r\n          rounded=\"10\"\r\n          overflow=\"hidden\"\r\n        >\r\n          <Link to={{ screen: \"posts\", params: { id: item?.id } }}>\r\n            <PostItemImageOnly key={item.id} item={item} />\r\n          </Link>\r\n        </Box>\r\n\r\n      ))\r\n      }\r\n    </HStack >\r\n  );\r\n}\r\nexport { UI };\r\nexport default function UserPosts(props) {\r\n  const { params = {} } = useRoute();\r\n  const { id } = params;\r\n  return <Controller {...props} UI={UI} id={id} />;\r\n}\r\n","import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nexport const COMMENT_CREATE = gql`\r\n  mutation($id: ID!, $data: InteractiveUpdateInput) {\r\n    updateInteractive(id: $id, data: $data) {\r\n      comments {\r\n        content\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CommentCreate({ UI, interactive, refetch }) {\r\n  const refectInteractiveItem = () => {\r\n    refetch();\r\n  };\r\n  const [on, { loading, error, data = {} }] = useMutation(COMMENT_CREATE, {\r\n    onCompleted: (data) => {\r\n      refectInteractiveItem();\r\n    },\r\n  });\r\n  return (\r\n    <UI loading={loading} error={error} on={on} interactive={interactive} />\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { HStack, Box, Image, Input } from \"native-base\";\r\nimport Controller from \"./Controller\";\r\nimport { AuthContext } from \"../../../Provider/Native\";\r\n\r\nexport function UI({ loading, error, on, interactive }) {\r\n  const [content, setContent] = useState(\"\");\r\n  const clickCreate = () => {\r\n    if (!loading)\r\n      on({\r\n        variables: {\r\n          id: interactive?.id,\r\n          data: {\r\n            comments: {\r\n              create: {\r\n                content: content,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n  };\r\n  const contentChangeHandle = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const userCommentHandle = (e) => {\r\n    const value = e.target.value;\r\n    if (!value.trim().length) {\r\n      return;\r\n    }\r\n    clickCreate();\r\n    setContent(\"\");\r\n  };\r\n  const user = useContext(AuthContext).user;\r\n  if (loading) return \"...\";\r\n  return (\r\n    <Box mx=\"auto\" w=\"full\">\r\n      <HStack space=\"2\" display=\"flex\" flexDirection=\"row\" w=\"full\">\r\n        <Image\r\n          source={{\r\n            uri:\r\n              \"https://odanang.net\" +\r\n              (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\r\n          }}\r\n          alt=\"Alternate Text\"\r\n          size=\"8\"\r\n          mx=\"auto\"\r\n          rounded=\"100\"\r\n        />\r\n        <Box flex=\"1\">\r\n          <Input\r\n            name=\"comment\"\r\n            type=\"text\"\r\n            bgColor=\"white\"\r\n            px={2}\r\n            py={1.5}\r\n            fontSize={14}\r\n            borderWidth={1}\r\n            borderColor=\"gray.100\"\r\n            rounded=\"8\"\r\n            _focus={{\r\n              borderColor: \"gray.100\",\r\n            }}\r\n            placeholder=\"Viết bình luận ...\"\r\n            value={content}\r\n            onChange={contentChangeHandle}\r\n            onSubmitEditing={userCommentHandle}\r\n          />\r\n        </Box>\r\n      </HStack>\r\n    </Box>\r\n  );\r\n}\r\nexport default function InteractionCommentCreateSimple(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { Button, Box } from \"native-base\";\r\nimport { IoIosReturnRight } from \"react-icons/io\";\r\n\r\nexport function UI({ onPress, count }) {\r\n  if (!count) return <Box />;\r\n  return (\r\n    <Button\r\n      _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\r\n      p=\"0\"\r\n      bgColor=\"transparent\"\r\n      leftIcon={<IoIosReturnRight size=\"16\" />}\r\n      onPress={onPress}\r\n      fontFamily=\"body\"\r\n    >\r\n      {`Xem câu trả lời (${count})`}\r\n    </Button>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nexport const INTERACTIVE_LIST = gql`\r\n  query(\r\n    $first: Int\r\n    $skip: Int\r\n    $sortBy: [SortInteractiveCommentsBy!]\r\n    $where: InteractiveWhereInput\r\n  ) {\r\n    _allInteractivesMeta(where: $where) {\r\n      count\r\n    }\r\n    allInteractives(where: $where) {\r\n      id\r\n      comments(sortBy: $sortBy, first: $first, skip: $skip) {\r\n        id\r\n        content\r\n        createdAt\r\n        createdBy {\r\n          id\r\n          name\r\n          avatar {\r\n            publicUrl\r\n          }\r\n        }\r\n        my_interactive {\r\n          id\r\n          reactions {\r\n            id\r\n            emoji\r\n            createdBy {\r\n              id\r\n            }\r\n          }\r\n          _reactionsMeta {\r\n            count\r\n          }\r\n        }\r\n      }\r\n      _commentsMeta {\r\n        count\r\n      }\r\n      reactions {\r\n        id\r\n        emoji\r\n        createdBy {\r\n          name\r\n          avatar {\r\n            publicUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function InteractiveListController({\r\n  UI,\r\n  first = 3,\r\n  skip,\r\n  sortBy,\r\n  where,\r\n  ...props\r\n}) {\r\n  const { loading, error, data = {}, fetchMore, refetch } = useQuery(\r\n    INTERACTIVE_LIST,\r\n    {\r\n      variables: { first, where, skip, sortBy },\r\n    }\r\n  );\r\n  const { allInteractives, _allInteractivesMeta = {} } = data;\r\n  const { comments } = allInteractives;\r\n  const { count = 0 } = allInteractives._commentsMeta;\r\n  console.log(count);\r\n  function getMore(e) {\r\n    if (loading || error) return;\r\n    if (count <= comments.length) return;\r\n    fetchMore({\r\n      variables: { skip: allPosts.length },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        return {\r\n          ...previousResult,\r\n          allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts],\r\n        };\r\n      },\r\n    });\r\n  }\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      allInteractives={allInteractives}\r\n      count={count}\r\n      refetch={refetch}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, makeVar, useQuery } from \"@apollo/client\";\r\nimport { INTERACTIVE_LIST } from \"../List/Controller\";\r\nexport const INTERACTIVE_ITEM = gql`\r\n  query(\r\n    $id: ID!\r\n    $sortBy: [SortInteractiveCommentsBy!]\r\n    $first: Int\r\n    $where: InteractiveWhereInput\r\n  ) {\r\n    allInteractives(where: $where) {\r\n      id\r\n      comments(sortBy: $sortBy, first: $first) {\r\n        id\r\n        content\r\n        createdAt\r\n        createdBy {\r\n          name\r\n          avatar {\r\n            publicUrl\r\n          }\r\n        }\r\n        interactive {\r\n          id\r\n          _commentsMeta {\r\n            count\r\n          }\r\n        }\r\n      }\r\n      reactions {\r\n        id\r\n        emoji\r\n        createdBy {\r\n          name\r\n          avatar {\r\n            publicUrl\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function InteractiveItem({\r\n  UI,\r\n  id,\r\n  where,\r\n  sortBy,\r\n  first = 3,\r\n  skip,\r\n}) {\r\n  const { loading, error, data = {}, fetchMore, refetch } = useQuery(\r\n    id ? INTERACTIVE_ITEM : INTERACTIVE_LIST,\r\n    {\r\n      variables: id ? { id, sortBy, first } : { where, sortBy, first, skip },\r\n    }\r\n  );\r\n  const { allInteractives, Interactive } = data;\r\n  const [interactive] = allInteractives || [Interactive];\r\n  const lengthComment = interactive?.comments.length\r\n    ? interactive.comments.length\r\n    : 0;\r\n  const count = interactive?._commentsMeta.count\r\n    ? interactive._commentsMeta.count\r\n    : 0;\r\n  function getMore(e) {\r\n    if (loading || error) return;\r\n    if (count <= lengthComment) return;\r\n    fetchMore({\r\n      variables: { first: lengthComment + first },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        return {\r\n          ...fetchMoreResult,\r\n        };\r\n      },\r\n    });\r\n  }\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      interactive={interactive}\r\n      getMore={getMore}\r\n      refetch={refetch}\r\n      count={count}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { RefetchInteractiveItem } from \"../../Item/Controller\";\r\n\r\nexport const COMMENT_DELETE = gql`\r\n  mutation($id: ID!) {\r\n    deleteInteractiveComment(id: $id) {\r\n      id\r\n      content\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CommentDelete({ UI, id, refetch }) {\r\n  const refectInteractiveItem = () => {\r\n    refetch();\r\n  };\r\n  const [on, { loading, error, data = {} }] = useMutation(COMMENT_DELETE, {\r\n    onCompleted: (data) => {\r\n      refectInteractiveItem();\r\n    },\r\n  });\r\n  const { deleteInteractiveComment } = data;\r\n  const clickDetete = () => {\r\n    on({ variables: { id: id } });\r\n  };\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      clickDetete={clickDetete}\r\n      comment={deleteInteractiveComment}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport CommentDelete from \"./Controller\";\r\nfunction UI({ loading, error, comment, clickDetete }) {\r\n  const toggleText = (e) => {\r\n    console.log(\"Comment Delete Text\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    clickDetete();\r\n  };\r\n  return loading ? (\r\n    \"...\"\r\n  ) : (\r\n    <Button\r\n      _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\r\n      p=\"0\"\r\n      bgColor=\"transparent\"\r\n      onPress={handleSubmit}\r\n    >\r\n      Xoá\r\n    </Button>\r\n  );\r\n}\r\nexport default function InteractionCommentCreateDelete(props) {\r\n  return <CommentDelete {...props} UI={UI} />;\r\n}\r\n","import { gql, useMutation } from \"@apollo/client\";\r\n\r\nexport const REACTION_DELETE = gql`\r\n  mutation($id: ID!) {\r\n    deleteInteractiveReaction(id: $id) {\r\n      id\r\n      emoji\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ReactionDelete({ UI, id, refetch }) {\r\n  const refetchPostItem = () => {\r\n    refetch();\r\n  };\r\n  const [on, { loading, error, data = {} }] = useMutation(REACTION_DELETE,{\r\n    onCompleted: (data) => {\r\n      refetchPostItem();\r\n    }\r\n  });\r\n  const { deleteInteractiveReaction } = data;\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      onDelete={on}\r\n      deletedReaction={deleteInteractiveReaction}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { REACTION_DELETE } from \"../Delete/Controller\";\r\n\r\nexport const REACTION_CREATE_POST = gql`\r\n  mutation($id: ID!, $data: InteractiveUpdateInput) {\r\n    updateInteractive(id: $id, data: $data) {\r\n      reactions {\r\n        emoji\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const REACTION_CREATE_COMMENT = gql`\r\n  mutation($id: ID!, $data: InteractiveUpdateInput) {\r\n    updateInteractive(id: $id, data: $data) {\r\n      id\r\n      reactions {\r\n        id\r\n        emoji\r\n      }\r\n      _reactionsMeta {\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function ReactionCreate({\r\n  UI,\r\n  interactive,\r\n  refetch,\r\n  reactionsList,\r\n  reactionsCommentList,\r\n  idMyInteractive,\r\n  refetchInteractiveItem,\r\n}) {\r\n  const refetchPostItem = () => {\r\n    refetch();\r\n  };\r\n  const [onCreate, { loading1, error1, data1 = {} }] = useMutation(\r\n    idMyInteractive ? REACTION_CREATE_COMMENT : REACTION_CREATE_POST,\r\n    {\r\n      onCompleted: (data) => {\r\n        idMyInteractive ? refetchInteractiveItem() : refetchPostItem();\r\n      },\r\n    }\r\n  );\r\n  const [onDelete, { loading2, error2, data2 = {} }] = useMutation(\r\n    REACTION_DELETE,\r\n    {\r\n      onCompleted: (data) => {\r\n        idMyInteractive ? refetchInteractiveItem() : refetchPostItem();\r\n      },\r\n    }\r\n  );\r\n  const { createInteractiveReaction } = data1;\r\n  const { deleteInteractiveReaction } = data2;\r\n  return (\r\n    <UI\r\n      interactive={interactive}\r\n      loading={loading1}\r\n      error={error1}\r\n      onCreate={onCreate}\r\n      onDelete={onDelete}\r\n      createReaction={createInteractiveReaction}\r\n      deleteReaction={deleteInteractiveReaction}\r\n      reactionsList={reactionsList}\r\n      idMyInteractive={idMyInteractive}\r\n      reactionsCommentList={reactionsCommentList}\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment, useContext, useState } from \"react\";\r\nimport { Button, Text } from \"native-base\";\r\nimport Controller from \"./Controller\";\r\nimport { AuthContext } from \"../../../Provider/Native\";\r\n\r\nfunction UI({\r\n  loading,\r\n  error,\r\n  onCreate,\r\n  onDelete,\r\n  idMyInteractive,\r\n  reactionsCommentList,\r\n}) {\r\n  const arrReactions = reactionsCommentList?.map((reaction) => {\r\n    return { idEmoij: reaction.id, userId: reaction.createdBy?.id  };\r\n  });\r\n  const arrUserId = reactionsCommentList.map((reaction) => {\r\n    return reaction.createdBy?.id;\r\n  });\r\n  let idDel;\r\n  const user = useContext(AuthContext).user;\r\n  const [isLike, setIsLike] = useState(arrUserId.indexOf(user.id) !== -1);\r\n  if (isLike === true)\r\n    idDel = arrReactions[arrUserId.indexOf(user.id)]\r\n      ? (idDel = arrReactions[arrUserId.indexOf(user.id)].idEmoij)\r\n      : null;\r\n  const likeHandle = (e) => {\r\n    if (!loading && isLike === false)\r\n      onCreate({\r\n        variables: {\r\n          id: idMyInteractive,\r\n          data: {\r\n            reactions: { create: { emoji: \"like\" } },\r\n          },\r\n        },\r\n      });\r\n    else\r\n      onDelete({\r\n        variables: {\r\n          id: idDel,\r\n        },\r\n      });\r\n    setIsLike((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLike && (\r\n        <Button\r\n          _text={{ color: \"green.500\", fontSize: \"12\", fontWeight: \"600\" }}\r\n          p=\"0\"\r\n          bgColor=\"transparent\"\r\n          onPress={likeHandle}\r\n        >\r\n          Thích\r\n        </Button>\r\n      )}\r\n      {!isLike && (\r\n        <Button\r\n          _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\r\n          p=\"0\"\r\n          bgColor=\"transparent\"\r\n          onPress={likeHandle}\r\n        >\r\n          Thích\r\n        </Button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function InteractionReactionCreateText(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React, { useState, Fragment, useContext } from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\r\nimport Controller from \"./Controller\";\r\nimport { AuthContext } from \"../../../Provider/Native\";\r\n\r\nexport function UI({\r\n  loading,\r\n  error,\r\n  interactive,\r\n  onCreate,\r\n  onDelete,\r\n  reactionsList,\r\n}) {\r\n  const arrReactions = reactionsList?.map((reaction) => {\r\n    return { idEmoij: reaction.id, userId: reaction.createdBy?.id };\r\n  });\r\n  const arrUserId = reactionsList.map((reaction) => {\r\n    return reaction.createdBy?.id;\r\n  });\r\n  let idDel;\r\n  const user = useContext(AuthContext).user;\r\n  const [isLike, setIsLike] = useState(arrUserId.indexOf(user.id) !== -1);\r\n  if (isLike === true)\r\n    idDel = arrReactions[arrUserId.indexOf(user.id)]\r\n      ? (idDel = arrReactions[arrUserId.indexOf(user.id)].idEmoij)\r\n      : null;\r\n  const likeHandle = (e) => {\r\n    if (!loading && isLike === false)\r\n      onCreate({\r\n        variables: {\r\n          id: interactive?.id,\r\n          data: {\r\n            reactions: { create: { emoji: \"like\" } },\r\n          },\r\n        },\r\n      });\r\n    else\r\n      onDelete({\r\n        variables: {\r\n          id: idDel,\r\n        },\r\n      });\r\n    setIsLike((prev) => !prev);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {isLike && (\r\n        <Button\r\n          _text={{ color: \"green.500\", fontSize: \"14\", fontWeight: \"600\" }}\r\n          p=\"2\"\r\n          bgColor=\"transparent\"\r\n          leftIcon={<FaHeart color=\"#22c55e\" size=\"17\" />}\r\n          _hover={{ bgColor: \"gray.100\" }}\r\n          onPress={likeHandle}\r\n        >\r\n          Thích\r\n        </Button>\r\n      )}\r\n      {!isLike && (\r\n        <Button\r\n          _text={{ color: \"gray.400\", fontSize: \"14\", fontWeight: \"600\" }}\r\n          p=\"2\"\r\n          bgColor=\"transparent\"\r\n          leftIcon={<FaRegHeart color=\"#a1a1aa\" size=\"17\" />}\r\n          _hover={{ bgColor: \"gray.100\" }}\r\n          onPress={likeHandle}\r\n        >\r\n          Thích\r\n        </Button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\nexport default function InteractionReactionCreateButton(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nexport const REACTION_LIST = gql`\r\n  query($where: InteractiveReactionWhereInput) {\r\n    _allInteractiveReactionsMeta(where: $where) {\r\n      count\r\n    }\r\n    allInteractiveReactions(where: $where) {\r\n      id\r\n      emoji\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ReactionListController({ UI, where, _allReactionsMeta, countLikeComment }) {\r\n  // const { loading, error, data = {}, refetch } = useQuery(REACTION_LIST, {\r\n  //   variables: { where },\r\n  // });\r\n  // const { allInteractiveReactions, _allInteractiveReactionsMeta } = data;\r\n  return (\r\n    <UI\r\n      // loading={loading}\r\n      // error={error}\r\n      // allReactions={allInteractiveReactions}\r\n      _allReactionsMeta={_allReactionsMeta}\r\n      countLikeComment = {countLikeComment}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Text } from \"native-base\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ loading, error, allReactions, countLikeComment }) {\r\n  return loading ? (\r\n    <Text>...</Text>\r\n  ) : (\r\n    <Text color=\"gray.400\" fontSize=\"12\" fontWeight=\"600\">\r\n      {countLikeComment} lượt thích\r\n    </Text>\r\n  );\r\n}\r\nexport default function InteractionReactionListTextWithCount(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { HStack, Text } from \"native-base\";\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ loading, error, allReactions, _allReactionsMeta }) {\r\n  return loading ? (\r\n    <Text>...</Text>\r\n  ) : (\r\n    <HStack alignItems=\"center\" space=\"1\">\r\n      <FaHeart color=\"#22c55e\" size=\"16\" />\r\n      <Text color=\"gray.800\" fontSize=\"14\" fontWeight=\"500\">\r\n        {_allReactionsMeta?.count} lượt thích\r\n      </Text>\r\n    </HStack>\r\n  );\r\n}\r\nexport default function InteractionReactionListIconTextWithCount(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { gql, useQuery, makeVar } from \"@apollo/client\";\r\nexport const COMMENT_LIST = gql`\r\n  query(\r\n    $first: Int\r\n    $skip: Int\r\n    $where: InteractiveCommentWhereInput\r\n    $sortBy: [SortInteractiveCommentsBy!]\r\n  ) {\r\n    _allInteractiveCommentsMeta(where: $where) {\r\n      count\r\n    }\r\n    allInteractiveComments(\r\n      first: $first\r\n      skip: $skip\r\n      where: $where\r\n      sortBy: $sortBy\r\n    ) {\r\n      id\r\n      content\r\n    }\r\n  }\r\n`;\r\nexport const RefetchInteractiveCommentList = makeVar(() => {});\r\n\r\nexport function CommentListController({\r\n  UI,\r\n  first = 5,\r\n  sortBy = \"createdAt_DESC\",\r\n  skip,\r\n  where,\r\n  refetchInteractiveItem,\r\n  ...props\r\n}) {\r\n  const { loading, error, data = {}, refetch } = useQuery(COMMENT_LIST, {\r\n    variables: { first, skip, where, sortBy },\r\n  });\r\n  const { _allInteractiveCommentsMeta = {}, allInteractiveComments } = data;\r\n  const { count } = _allInteractiveCommentsMeta;\r\n  if (refetch) RefetchInteractiveCommentList(refetch);\r\n  return useMemo(\r\n    () => (\r\n      <UI\r\n        {...props}\r\n        loading={loading}\r\n        error={error}\r\n        allInteractiveComments={allInteractiveComments}\r\n        count={count}\r\n        refetchInteractiveItem={refetchInteractiveItem}\r\n      />\r\n    ),\r\n    [loading, error, data]\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { COMMENT_LIST } from \"../List/Controller\";\r\nexport const COMMENT_ITEM = gql`\r\n  query($id: ID!) {\r\n    InteractiveComment(where: { id: $id }) {\r\n      id\r\n      content\r\n      createdAt\r\n      createdBy {\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n        id\r\n      }\r\n      my_interactive{\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport function CommenItemController({ UI, id, where, refetchInteractiveItem }) {\r\n  const { loading, error, data = {} } = useQuery(\r\n    id ? COMMENT_ITEM : COMMENT_LIST,\r\n    {\r\n      variables: id ? { id } : { where },\r\n    },\r\n  );\r\n  const { allInteractiveComments, InteractiveComment } = data;\r\n  const [comment] = allInteractiveComments || [InteractiveComment];\r\n  return <UI loading={loading} error={error} comment={comment} refetchInteractiveItem={refetchInteractiveItem} />;\r\n}\r\n","import React from \"react\";\r\nimport { UI as InteractionCommentItemSimple } from \"../Item/Simple\";\r\nimport { Button, VStack } from \"native-base\";\r\nimport { CommentListController } from \"./Controller\";\r\n\r\nexport function UI({\r\n  loading,\r\n  error,\r\n  allInteractiveComments = [],\r\n  count = 0,\r\n  refetchInteractiveItem,\r\n  getMore,\r\n}) {\r\n  // Map list comments => InteractionCommentItemSimple\r\n  if (loading) return \"...\";\r\n  return (\r\n    <VStack>\r\n      {allInteractiveComments.map((comment) => {\r\n        return (\r\n          <InteractionCommentItemSimple\r\n            key={comment.id}\r\n            comment={comment}\r\n            refetchInteractiveItem={refetchInteractiveItem}\r\n          />\r\n        );\r\n      })}\r\n      {/* More comments */}\r\n      {count > allInteractiveComments.length && (\r\n        <Button\r\n          _text={{\r\n            color: \"gray.500\",\r\n            fontSize: \"12\",\r\n            fontWeight: \"600\",\r\n          }}\r\n          p=\"0\"\r\n          bgColor=\"transparent\"\r\n          onPress={getMore}\r\n        >\r\n          Xem thêm bình luận\r\n        </Button>\r\n      )}\r\n    </VStack>\r\n  );\r\n}\r\nexport default function InteractionCommentListSimple(props) {\r\n  return <CommentListController {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { Box } from \"native-base\";\r\nimport InteractionCommentCreateSimple from \"../Comment/Create/Simple\";\r\nimport { UI as InteractionCommentListSimple } from \"../Comment/List/Simple\";\r\nimport Controller from \"./Controller\";\r\nfunction UI({ loading, error, interactive, refetch, getMore, count }) {\r\n  if (loading) return \"...\";\r\n  return (\r\n    <Box w=\"full\">\r\n      <InteractionCommentCreateSimple\r\n        my=\"10\"\r\n        interactive={interactive}\r\n        refetch={refetch}\r\n      />\r\n      <InteractionCommentListSimple\r\n        allInteractiveComments={interactive?.comments}\r\n        refetchInteractiveItem={refetch}\r\n        getMore={getMore}\r\n        count={count}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\nexport default function InteractiveItemSimple(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport ListToggleText from \"../List/ToggleText\";\r\nimport { InteractionCommentCreateUpdateText as CreateText } from \"../\";\r\nimport DeleteText from \"../Delete/Text\";\r\nimport {\r\n  InteractionReactionCreateText,\r\n  InteractionReactionListTextWithCount,\r\n} from \"../../Reaction\";\r\nimport { VStack, HStack, Box, Image, Text } from \"native-base\";\r\nimport { CommenItemController } from \"./Controller\";\r\nimport InteractiveItemSimple from \"../../Item/Simple\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { AuthContext } from '../../../Provider/Native'\r\n\r\nfunction formatTimeCreate(createdAt) {\r\n  var dayjs = require(\"dayjs\");\r\n  let stringTime = \"\";\r\n  const createdTime = dayjs(createdAt);\r\n  const now = dayjs();\r\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\r\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\r\n      stringTime =\r\n        Number(now.get(\"minute\")) -\r\n        Number(createdTime.get(\"minute\")) +\r\n        \" phút trước\";\r\n    else\r\n      stringTime =\r\n        Number(now.get(\"hour\")) -\r\n        Number(createdTime.get(\"hour\")) +\r\n        \" giờ trước\";\r\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\r\n  return stringTime;\r\n}\r\nexport function UI({ loading, error, comment, refetchInteractiveItem }) {\r\n  const currentUser = useContext(AuthContext).user\r\n  const [open, setOpen] = useState(false);\r\n  const stringCreatedAt = formatTimeCreate(comment?.createdAt);\r\n  const { interactive = {} } = comment;\r\n  const { _commentsMeta = {} } = interactive;\r\n  const { count = 0 } = _commentsMeta;\r\n  if (loading) return \"\";\r\n  return (\r\n    <Box mx=\"auto\" my=\"2\" w=\"full\">\r\n      <VStack>\r\n        <HStack space=\"2\" display=\"flex\" flexDirection=\"row\" w=\"full\">\r\n          <Link to={{ screen: \"users\", params: { id: comment?.createdBy?.id } }}>\r\n            <Image\r\n              source={{\r\n                uri:\r\n                  \"https://odanang.net\" + (comment?.createdBy?.avatar?.publicUrl ||\r\n                    \"/upload/img/no-image.png\"),\r\n              }}\r\n              alt=\"Profile image\"\r\n              size=\"8\"\r\n              rounded=\"100\"\r\n            />\r\n          </Link>\r\n          <VStack flex=\"1\">\r\n            <HStack>\r\n              <Box bgColor=\"gray.50\" rounded=\"8\" px=\"3\" py=\"2\" flex=\"1\">\r\n                <Link to={{ screen: \"users\", params: { id: comment?.createdBy?.id } }}>\r\n                  <Text color=\"gray.900\" fontWeight=\"600\" fontSize=\"14\">\r\n                    {comment?.createdBy?.name}\r\n                  </Text>\r\n                </Link>\r\n                <Text color=\"gray.700\" lineHeight=\"18\">\r\n                  {comment?.content}\r\n                </Text>\r\n              </Box>\r\n            </HStack>\r\n            <HStack ml=\"3\" mt=\"1\" space=\"3\">\r\n              <InteractionReactionCreateText\r\n                idMyInteractive={comment?.my_interactive?.id}\r\n                refetchInteractiveItem={refetchInteractiveItem}\r\n                reactionsCommentList={comment?.my_interactive?.reactions}\r\n              />\r\n              {/* <CreateText\r\n                comment={comment}\r\n                onPress={(e) => setOpen((open) => !open)}\r\n              /> */}\r\n              {comment?.createdBy?.id === currentUser.id && (\r\n                <DeleteText id={comment?.id} refetch={refetchInteractiveItem} />\r\n              )}\r\n              <InteractionReactionListTextWithCount\r\n                countLikeComment={\r\n                  comment?.my_interactive?._reactionsMeta?.count\r\n                }\r\n              />\r\n              <Text color=\"gray.400\" fontSize=\"12\">\r\n                {stringCreatedAt}\r\n              </Text>\r\n            </HStack>\r\n\r\n            {/* Check if this comment has reponses */}\r\n            <HStack ml=\"3\" mt=\"1\">\r\n              <ListToggleText count={count} />\r\n              {open && comment?.interactive?.id && (\r\n                <InteractiveItemSimple id={comment?.my_interactive?.id} />\r\n              )}\r\n            </HStack>\r\n          </VStack>\r\n        </HStack>\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\nexport default function InteractionCommentItemSimple(props) {\r\n  return <CommenItemController {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport { FaRegComment } from \"react-icons/fa\";\r\n\r\nfunction UI() {\r\n  const toggleButton = (e) => {\r\n    console.log(\"Comment List ToggleButton\");\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      _text={{ color: \"gray.400\", fontSize: \"14\", fontWeight: \"600\" }}\r\n      p=\"2\"\r\n      bgColor=\"transparent\"\r\n      leftIcon={<FaRegComment color=\"#a1a1aa\" size=\"17\" />}\r\n      _hover={{ bgColor: \"gray.100\" }}\r\n      onPress={toggleButton}\r\n    >\r\n      Bình luận\r\n    </Button>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\nexport const COMMENT_UPDATE = gql`\r\n  mutation($id: ID!, $data: InteractiveCommentUpdateInput) {\r\n    updateInteractiveComment(id: $id, data: $data) {\r\n      id\r\n      content\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CommentUpdate({ UI, comment, ...props }) {\r\n  const [on, { loading, error, data = {} }] = useMutation(COMMENT_UPDATE, {\r\n    onCompleted: (data) => {\r\n      console.log(data);\r\n    },\r\n    onError: (e) => {\r\n      console.error(e);\r\n    },\r\n  });\r\n  const onPress = (e) => {\r\n    on({\r\n      variables: { id: comment.id, data: { interactive: { create: {} } } },\r\n    });\r\n  };\r\n  if (loading) return \"...\";\r\n  if (error) return error.message;\r\n  const { commentUpdate } = data;\r\n  return (\r\n    <UI\r\n      {...props}\r\n      comment={comment}\r\n      on={on}\r\n      commentUpdate={commentUpdate}\r\n      onPress={onPress}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HStack, Box, VStack, Text, Divider } from \"native-base\";\r\nimport { PostItemImageOnly } from \"../../Post\";\r\n// import PostItemSkeletonGrid from \"./SkeletonGrid\";\r\n\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://vcdn1-dulich.vnecdn.net/2018/10/27/home-venice-italy.jpg?w=1200&h=0&q=100&dpr=1&fit=crop&s=PnlZagm9qKzpioNh9CVmUA\",\r\n  },\r\n  {\r\n    id: 2,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632806027/241259419_246687107340299_4139464774758156957_n_s1zuao.jpg\",\r\n  },\r\n  {\r\n    id: 3,\r\n    link: \"#\",\r\n    thumbnailUrl: \"https://static.toiimg.com/photo/84475061.cms\",\r\n  },\r\n  {\r\n    id: 4,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"http://tonyenglish.vn/uploads/news/2019/0106/1546787257_MW-GY949_travel_20181122135819_ZH.jpg\",\r\n  },\r\n  {\r\n    id: 5,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/190312313_2943016239348813_282704590362946930_n_pc3vbb.jpg\",\r\n  },\r\n  {\r\n    id: 6,\r\n    link: \"#\",\r\n    thumbnailUrl:\r\n      \"https://tuandungtravel.com/wp-content/uploads/2019/07/du-lich-ba-na-hills-tuan-dung-travel-9.jpg\",\r\n  },\r\n];\r\n\r\nfunction UI(loading) {\r\n  // if (loading) {\r\n  //   return <PostItemSkeletonGrid />;\r\n  // }\r\n\r\n  return (\r\n    <VStack w=\"full\">\r\n      <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\r\n        <Text fontSize=\"18px\" fontWeight=\"600\" color=\"gray.700\">\r\n          Bài viết bạn đã lưu\r\n        </Text>\r\n      </Box>\r\n\r\n      <HStack maxw=\"full\" w=\"full\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n        {data.map((item) => (\r\n          <Box\r\n            key={item.id}\r\n            minW={[\"49%\", \"32%\", \"24%\"]}\r\n            m=\"0.5%\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"gray.100\"\r\n            rounded=\"10px\"\r\n            overflow=\"hidden\"\r\n          >\r\n            <PostItemImageOnly key={item.id} item={item} />\r\n          </Box>\r\n        ))}\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\nexport default UI;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport { FaRegBookmark, FaBookmark } from \"react-icons/fa\";\r\n\r\nfunction UI() {\r\n  const [isSaved, setIsSaved] = useState(false);\r\n\r\n  const saveHandle = (e) => {\r\n    setIsSaved((prev) => !prev);\r\n    console.log(\"Album Create Button\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isSaved && (\r\n        <Button\r\n          _text={{ color: \"green.500\", fontSize: \"14\", fontWeight: \"600\" }}\r\n          p=\"2\"\r\n          bgColor=\"transparent\"\r\n          leftIcon={<FaBookmark color=\"#22c55e\" size=\"17\" />}\r\n          _hover={{ bgColor: \"gray.100\" }}\r\n          onPress={saveHandle}\r\n        >\r\n          Lưu\r\n        </Button>\r\n      )}\r\n      {!isSaved && (\r\n        <Button\r\n          _text={{ color: \"gray.400\", fontSize: \"14\", fontWeight: \"600\" }}\r\n          p=\"2\"\r\n          bgColor=\"transparent\"\r\n          leftIcon={<FaRegBookmark color=\"#a1a1aa\" size=\"17\" />}\r\n          _hover={{ bgColor: \"gray.100\" }}\r\n          onPress={saveHandle}\r\n        >\r\n          Lưu\r\n        </Button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\nexport default UI;\r\n","import React, { useState } from \"react\";\r\nimport { HStack, Box, Flex, Image, Button } from \"native-base\";\r\nimport { FaArrowCircleLeft, FaArrowCircleRight } from \"react-icons/fa\";\r\nimport { BsChevronRight, BsChevronLeft } from \"react-icons/bs\";\r\n\r\nfunction UI({ urls = [] }) {\r\n  const arrowStyles = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    color: \"gray.700\",\r\n    p: \"1\",\r\n    fontSize: \"20\",\r\n    bgColor: \"white\",\r\n    opacity: \"0.6\",\r\n    rounded: \"50%\",\r\n  };\r\n\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  const urlsCount = urls.length;\r\n\r\n  const prevSlide = () => {\r\n    setCurrentSlide((s) => (s === 0 ? urlsCount - 1 : s - 1));\r\n  };\r\n  const nextSlide = () => {\r\n    setCurrentSlide((s) => (s === urlsCount - 1 ? 0 : s + 1));\r\n  };\r\n\r\n  const setSlide = (slide) => {\r\n    setCurrentSlide(slide);\r\n  };\r\n\r\n  const carouselStyle = {\r\n    ml: `-${currentSlide * 100}%`,\r\n  };\r\n\r\n  return (\r\n    <Flex w=\"full\" alignItems=\"center\" justifyContent=\"center\">\r\n      <Flex w=\"full\" direction=\"row\" overflow=\"hidden\" position=\"relative\">\r\n        <Flex direction=\"row\" w=\"full\" {...carouselStyle}>\r\n          {urls.map((slide, index) => (\r\n            <Box key={`slide-${index}`} boxSize=\"100%\" flex=\"none\">\r\n              <Image\r\n                src={slide}\r\n                alt=\"Slide Image\"\r\n                backgroundSize=\"cover\"\r\n                flex=\"1\"\r\n                p=\"50%\"\r\n              />\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n        <Button {...arrowStyles} left=\"3\" onPress={prevSlide}>\r\n          <BsChevronLeft size=\"16\" />\r\n        </Button>\r\n        <Button {...arrowStyles} right=\"3\" onPress={nextSlide}>\r\n          <BsChevronRight size=\"16\" />\r\n        </Button>\r\n        <HStack direction=\"row\" position=\"absolute\" bottom=\"2\" right=\"2\">\r\n          {Array.from({ length: urlsCount }).map((_, slide) => (\r\n            <Button\r\n              key={`dots-${slide}`}\r\n              w=\"1\"\r\n              m=\"0.5\"\r\n              p=\"1\"\r\n              rounded=\"50%\"\r\n              opacity=\"0.8\"\r\n              bgColor={currentSlide === slide ? \"green.500\" : \"white\"}\r\n              onPress={() => setSlide(slide)}\r\n            ></Button>\r\n          ))}\r\n        </HStack>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { POST_LIST } from \"../List/Controller\";\r\nexport const POST_ITEM = gql`\r\n  query($id: ID!) {\r\n    Post(where: { id: $id }) {\r\n      id\r\n      content\r\n      tags {\r\n        content\r\n      }\r\n      images {\r\n        file {\r\n          publicUrl\r\n        }\r\n      }\r\n      interactive {\r\n        id\r\n        comments {\r\n          content\r\n        }\r\n        reactions {\r\n          id\r\n          emoji\r\n          createdBy {\r\n            id\r\n          }\r\n        }\r\n        _commentsMeta {\r\n          count\r\n        }\r\n        _reactionsMeta {\r\n          count\r\n        }\r\n      }\r\n      createdAt\r\n      createdBy {\r\n        id\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function PostItem({ UI, id, where }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(\r\n    id ? POST_ITEM : POST_LIST,\r\n    {\r\n      variables: id ? { id } : { where },\r\n    }\r\n  );\r\n\r\n  const { allPosts, Post } = data;\r\n  const [post] = allPosts || [Post];\r\n  return <UI loading={loading} error={error} post={post} refetch={refetch} />;\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Box, HStack, Image, Text, Button, VStack, Divider } from \"native-base\";\r\nimport {\r\n  InteractionCommentCreateSimple,\r\n  InteractionCommentListSimple,\r\n  InteractionCommentListToggleButton,\r\n} from \"../../Interactive/Comment\";\r\nimport {\r\n  InteractionReactionCreateButton,\r\n  InteractionReactionListIconTextWithCount,\r\n} from \"../../Interactive/Reaction\";\r\nimport { AlbumCreateButton } from \"../../Album\";\r\nimport { PostDeleteText, PostUpdateText } from \"../index\";\r\nimport { UploadImageListCarousel } from \"../../Upload/Image\";\r\nimport { HiOutlineDotsHorizontal } from \"react-icons/hi\";\r\nimport PostItem from \"./Controller\";\r\nimport InteractiveItemSimple from \"../../Interactive/Item/Simple\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { AuthContext } from '../../Provider/Native'\r\n\r\nfunction formatTimeCreate(createdAt) {\r\n  var dayjs = require(\"dayjs\");\r\n  let stringTime = \"\";\r\n  const createdTime = dayjs(createdAt);\r\n  const now = dayjs();\r\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\r\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\r\n      stringTime =\r\n        Number(now.get(\"minute\")) -\r\n        Number(createdTime.get(\"minute\")) +\r\n        \" phút trước\";\r\n    else\r\n      stringTime =\r\n        Number(now.get(\"hour\")) -\r\n        Number(createdTime.get(\"hour\")) +\r\n        \" giờ trước\";\r\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\r\n  return stringTime;\r\n}\r\n\r\nfunction UI({ loading, error, post, refetch }) {\r\n  const currentUser = useContext(AuthContext).user\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const stringCreatedAt = formatTimeCreate(post?.createdAt);\r\n  const toggleModal = () => {\r\n    setIsModalOpen((prev) => !prev);\r\n    console.log(isModalOpen);\r\n  };\r\n  if (loading) return \"\";\r\n  return (\r\n    <Box\r\n      maxW={[\"100%\", \"container.md\"]}\r\n      my={1}\r\n      py={4}\r\n      rounded={[\"0\", \"xl\"]}\r\n      borderWidth=\"1\"\r\n      borderColor=\"gray.100\"\r\n    >\r\n      <HStack\r\n        space=\"3\"\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        px=\"3\"\r\n        alignItems=\"center\"\r\n        position=\"relative\"\r\n        zIndex=\"1\"\r\n      >\r\n        <Link to={{ screen: \"users\", params: { id: post?.createdBy?.id } }}>\r\n          <Image\r\n            source={{\r\n              uri:\r\n                \"https://odanang.net\" +\r\n                (post?.createdBy?.avatar?.publicUrl ||\r\n                  \"/upload/img/no-image.png\"),\r\n\r\n            }}\r\n            alt=\"Profile image\"\r\n            size=\"8\"\r\n            rounded=\"100\"\r\n          />\r\n        </Link>\r\n        <Link to={{ screen: \"users\", params: { id: post?.createdBy?.id } }}>\r\n          <Text color=\"gray.900\" fontWeight=\"600\" fontSize=\"14\">\r\n            {post?.createdBy?.name}\r\n          </Text>\r\n        </Link>\r\n        <Text color=\"gray.400\" fontSize=\"12\">\r\n          {stringCreatedAt}\r\n        </Text>\r\n        {isModalOpen && post.createdBy.id === currentUser.id && (\r\n          <VStack\r\n            position=\"absolute\"\r\n            right=\"3\"\r\n            top=\"8\"\r\n            borderColor=\"gray.100\"\r\n            borderWidth=\"1\"\r\n            bgColor=\"white\"\r\n            rounded=\"10\"\r\n            space=\"1\"\r\n            p=\"2\"\r\n          >\r\n            <PostUpdateText />\r\n            <Divider w=\"full\" bgColor=\"gray.100\" />\r\n            <PostDeleteText id={post?.id} />\r\n          </VStack>\r\n        )}\r\n        {post.createdBy.id === currentUser.id && (\r\n          <Button\r\n            bgColor=\"transparent\"\r\n            p=\"1\"\r\n            color=\"gray.500\"\r\n            ml=\"auto\"\r\n            onPress={toggleModal}\r\n          >\r\n            <HiOutlineDotsHorizontal />\r\n          </Button>\r\n        )}\r\n      </HStack>\r\n      <Text px=\"3\" my=\"2\">\r\n        {post.content}\r\n      </Text>\r\n      <UploadImageListCarousel\r\n        urls={post?.images?.map(\r\n          (image) => \"https://odanang.net\" + image?.file?.publicUrl\r\n        )}\r\n      />\r\n      <Box px=\"3\" mt=\"2\">\r\n        <InteractionReactionListIconTextWithCount\r\n          _allReactionsMeta={post?.interactive?._reactionsMeta}\r\n        />\r\n      </Box>\r\n      <Box px=\"3\">\r\n        <HStack\r\n          w=\"full\"\r\n          my=\"2\"\r\n          borderBottomWidth=\"1\"\r\n          borderBottomColor=\"gray.100\"\r\n          borderTopWidth=\"1\"\r\n          borderTopColor=\"gray.100\"\r\n          justifyContent=\"space-around\"\r\n        >\r\n          <Box w=\"33%\">\r\n            <InteractionReactionCreateButton\r\n              interactive={post.interactive}\r\n              refetch={refetch}\r\n              reactionsList={post?.interactive?.reactions}\r\n            />\r\n          </Box>\r\n          <Box w=\"33%\">\r\n            <InteractionCommentListToggleButton />\r\n          </Box>\r\n          <Box w=\"33%\">\r\n            <AlbumCreateButton />\r\n          </Box>\r\n        </HStack>\r\n        <InteractiveItemSimple\r\n          where={{ id: post?.interactive?.id }}\r\n          sortBy=\"createdAt_DESC\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default function PostItemSimple(props) {\r\n  return <PostItem {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { Rect, Circle } from \"react-content-loader/native\";\r\nimport { Box } from \"native-base\";\r\n\r\nfunction UI(props) {\r\n  return (\r\n    <Box maxW=\"700\" w=\"full\" p=\"2\">\r\n      <ContentLoader\r\n        speed=\"1\"\r\n        w=\"full\"\r\n        mx=\"auto\"\r\n        viewBox=\"0 0 700 720\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        animate=\"true\"\r\n      >\r\n        <Rect x=\"70\" y=\"15\" rx=\"10\" ry=\"10\" width=\"180\" height=\"20\" />\r\n        <Rect x=\"270\" y=\"15\" rx=\"10\" ry=\"10\" width=\"80\" height=\"20\" />\r\n        <Rect x=\"0\" y=\"70\" rx=\"10\" ry=\"10\" width=\"500\" height=\"20\" />\r\n        <Rect x=\"0\" y=\"110\" rx=\"10\" ry=\"10\" width=\"700\" height=\"550\" />\r\n        <Circle cx=\"25\" cy=\"25\" r=\"25\" />\r\n      </ContentLoader>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { Button, VStack } from \"native-base\";\r\nimport PostItemSimple from \"../Item/Simple\";\r\nimport PostItemSkeletonSimple from \"./SkeletonSimple\";\r\nimport PostListController from \"./Controller\";\r\nimport { all } from \"deepmerge\";\r\n\r\nfunction UI({ loading, error, allPosts, count, getMore }) {\r\n  if (loading) {\r\n    return <PostItemSkeletonSimple />;\r\n  }\r\n\r\n  return (\r\n    <VStack px={[\"0\", \"1\"]}>\r\n      {/* Map list posts */}\r\n      {allPosts.map((post) => (\r\n        <PostItemSimple key={post.id} id={post.id} />\r\n      ))}\r\n      {count > allPosts.length && (\r\n        <Button onPress={getMore}>Tải thêm bài viết</Button>\r\n      )}\r\n    </VStack>\r\n  );\r\n}\r\nexport default function PostListSimple(props) {\r\n  return <PostListController {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { Rect } from \"react-content-loader/native\";\r\nimport { Box } from \"native-base\";\r\n\r\nfunction UI() {\r\n  return (\r\n    <Box maxW=\"1000\" w=\"full\" mx=\"auto\">\r\n      <ContentLoader\r\n        speed=\"1\"\r\n        w=\"full\"\r\n        mx=\"auto\"\r\n        viewBox=\"0 0 1000 700\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        animate=\"true\"\r\n      >\r\n        <Rect x=\"620\" y=\"15\" rx=\"40\" ry=\"40\" width=\"40\" height=\"40\" />\r\n        <Rect x=\"680\" y=\"25\" rx=\"10\" ry=\"10\" width=\"150\" height=\"20\" />\r\n        <Rect x=\"620\" y=\"70\" rx=\"10\" ry=\"10\" width=\"380\" height=\"25\" />\r\n        <Rect x=\"620\" y=\"120\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\r\n        <Rect x=\"620\" y=\"235\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\r\n        <Rect x=\"620\" y=\"350\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\r\n        <Rect x=\"620\" y=\"465\" rx=\"10\" ry=\"10\" width=\"380\" height=\"100\" />\r\n        <Rect x=\"0\" y=\"15\" rx=\"10\" ry=\"10\" width=\"600\" height=\"550\" />\r\n      </ContentLoader>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { POST_LIST } from \"../List/Controller\";\r\nexport const POST_ITEM = gql`\r\n  query($id: ID!) {\r\n    Post(where: { id: $id }) {\r\n      id\r\n      content\r\n      tags {\r\n        content\r\n      }\r\n      images {\r\n        file {\r\n          publicUrl\r\n        }\r\n      }\r\n      interactive {\r\n        id\r\n        comments {\r\n          content\r\n        }\r\n        reactions {\r\n          id\r\n          emoji\r\n          createdBy {\r\n            id\r\n          }\r\n        }\r\n        _commentsMeta {\r\n          count\r\n        }\r\n        _reactionsMeta {\r\n          count\r\n        }\r\n      }\r\n      createdAt\r\n      createdBy {\r\n        id\r\n        name\r\n        avatar {\r\n          publicUrl\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default function PostDetail({ UI, id }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(POST_ITEM, {\r\n    variables: { id }\r\n  }\r\n  );\r\n\r\n  const { Post } = data;\r\n  const post = Post;\r\n  console.log(post)\r\n  return <UI loading={loading} error={error} post={post} refetch={refetch} />;\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Stack,\r\n  HStack,\r\n  Image,\r\n  Text,\r\n  Button,\r\n  VStack,\r\n  Divider,\r\n} from \"native-base\";\r\nimport {\r\n  InteractionCommentCreateSimple,\r\n  InteractionCommentListSimple,\r\n  InteractionCommentListToggleButton,\r\n} from \"../../Interactive/Comment\";\r\nimport {\r\n  InteractionReactionCreateButton,\r\n  InteractionReactionListIconTextWithCount,\r\n} from \"../../Interactive/Reaction\";\r\nimport { AlbumCreateButton } from \"../../Album\";\r\nimport { PostDeleteText, PostUpdateText } from \"../index\";\r\nimport { UploadImageListCarousel } from \"../../Upload/Image\";\r\nimport { HiOutlineDotsHorizontal } from \"react-icons/hi\";\r\nimport PostItemSkeletonDetail from \"./SkeletonDetail\";\r\nimport InteractiveItemSimple from \"../../Interactive/Item/Simple\";\r\nimport PostDetail from \"./Controller\";\r\nimport { AuthContext } from \"../../Provider/Native\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\nfunction formatTimeCreate(createdAt) {\r\n  var dayjs = require(\"dayjs\");\r\n  let stringTime = \"\";\r\n  const createdTime = dayjs(createdAt);\r\n  const now = dayjs();\r\n  if (now.format(\"DD-MM-YYYY\") === createdTime.format(\"DD-MM-YYYY\")) {\r\n    if (Number(now.get(\"hour\")) - Number(createdTime.get(\"hour\")) === 0)\r\n      stringTime =\r\n        Number(now.get(\"minute\")) -\r\n        Number(createdTime.get(\"minute\")) +\r\n        \" phút trước\";\r\n    else\r\n      stringTime =\r\n        Number(now.get(\"hour\")) -\r\n        Number(createdTime.get(\"hour\")) +\r\n        \" giờ trước\";\r\n  } else stringTime = createdTime.format(\"DD-MM-YYYY\");\r\n  return stringTime;\r\n}\r\n\r\nfunction UI({ loading, error, post, refetch }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const currentUser = useContext(AuthContext).user;\r\n  const stringCreatedAt = formatTimeCreate(post?.createdAt);\r\n  const toggleModal = () => {\r\n    setIsModalOpen((prev) => !prev);\r\n    console.log(isModalOpen);\r\n  };\r\n\r\n  console.log(post);\r\n  if (loading) {\r\n    return <PostItemSkeletonDetail />;\r\n  }\r\n  return (\r\n    <Stack\r\n      direction={[\"column\", \"column\", \"column\", \"row\"]}\r\n      mx=\"auto\"\r\n      my=\"3\"\r\n      w={[\"100%\", \"90%\", \"80%\", \"100%\"]}\r\n      rounded={[\"0\", \"xl\"]}\r\n      borderWidth=\"1\"\r\n      borderColor=\"gray.100\"\r\n    >\r\n      <Box w={[\"100%\", \"100%\", \"100%\", \"60%\"]}>\r\n        <UploadImageListCarousel\r\n          urls={post?.images?.map(\r\n            (image) => \"https://odanang.net\" + image?.file?.publicUrl\r\n          )}\r\n        />\r\n      </Box>\r\n      <VStack\r\n        maxW={[\"100%\", \"100%\", \"100%\", \"40%\"]}\r\n        py=\"3\"\r\n        px={[\"0\", \"0\", \"1\"]}\r\n      >\r\n        <HStack\r\n          space=\"3\"\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          w=\"full\"\r\n          px=\"3\"\r\n          alignItems=\"center\"\r\n          position=\"relative\"\r\n          zIndex=\"1\"\r\n        >\r\n          <Image\r\n            source={{\r\n              uri:\r\n                \"https://odanang.net\" +\r\n                (post?.createdBy?.avatar?.publicUrl ||\r\n                  \"/upload/img/no-image.png\"),\r\n            }}\r\n            alt=\"Profile image\"\r\n            size=\"8\"\r\n            rounded=\"100\"\r\n          />\r\n          <Link to={{ screen: \"users\", params: { id: post?.createdBy?.id } }}>\r\n            <Text color=\"gray.900\" fontWeight=\"600\" fontSize=\"14\">\r\n              {post?.createdBy?.name}\r\n            </Text>\r\n          </Link>\r\n          <Text color=\"gray.400\" fontSize=\"12\">\r\n            {stringCreatedAt}\r\n          </Text>\r\n          {isModalOpen && (\r\n            <VStack\r\n              position=\"absolute\"\r\n              right=\"3\"\r\n              top=\"8\"\r\n              borderColor=\"gray.100\"\r\n              borderWidth=\"1\"\r\n              bgColor=\"white\"\r\n              rounded=\"10\"\r\n              space=\"1\"\r\n              p=\"2\"\r\n            >\r\n              <PostUpdateText />\r\n              <Divider w=\"full\" bgColor=\"gray.100\" />\r\n              <PostDeleteText />\r\n            </VStack>\r\n          )}\r\n          {isModalOpen && post?.createdBy?.id === currentUser.id && (\r\n            <VStack\r\n              position=\"absolute\"\r\n              right=\"3\"\r\n              top=\"8\"\r\n              borderColor=\"gray.100\"\r\n              borderWidth=\"1\"\r\n              bgColor=\"white\"\r\n              rounded=\"10\"\r\n              space=\"1\"\r\n              p=\"2\"\r\n            >\r\n              <PostUpdateText />\r\n              <Divider w=\"full\" bgColor=\"gray.100\" />\r\n              <PostDeleteText id={post?.id} />\r\n            </VStack>\r\n          )}\r\n          {post?.createdBy?.id === currentUser.id && (\r\n            <Button\r\n              bgColor=\"transparent\"\r\n              p=\"1\"\r\n              color=\"gray.500\"\r\n              ml=\"auto\"\r\n              onPress={toggleModal}\r\n            >\r\n              <HiOutlineDotsHorizontal />\r\n            </Button>\r\n          )}\r\n        </HStack>\r\n        <Text px=\"3\" my=\"2\">\r\n          {post.content}\r\n        </Text>\r\n        <Box px=\"3\" mt=\"2\">\r\n          <InteractionReactionListIconTextWithCount\r\n            _allReactionsMeta={post?.interactive?._reactionsMeta}\r\n          />\r\n        </Box>\r\n        <Box px=\"3\">\r\n          <HStack\r\n            w=\"full\"\r\n            my=\"2\"\r\n            borderBottomWidth=\"1\"\r\n            borderBottomColor=\"gray.100\"\r\n            borderTopWidth=\"1\"\r\n            borderTopColor=\"gray.100\"\r\n            justifyContent=\"space-around\"\r\n          >\r\n            <Box w=\"33%\">\r\n              <InteractionReactionCreateButton\r\n                interactive={post.interactive}\r\n                refetch={refetch}\r\n                reactionsList={post?.interactive?.reactions}\r\n              />\r\n            </Box>\r\n            <Box w=\"33%\">\r\n              <InteractionCommentListToggleButton />\r\n            </Box>\r\n            <Box w=\"33%\">\r\n              <AlbumCreateButton />\r\n            </Box>\r\n          </HStack>\r\n          <InteractiveItemSimple\r\n            where={{ id: post?.interactive?.id }}\r\n            sortBy=\"createdAt_DESC\"\r\n          />\r\n        </Box>\r\n      </VStack>\r\n    </Stack>\r\n  );\r\n}\r\nexport default function PostDetailSimple(props) {\r\n  return <PostDetail {...props} UI={UI} />;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { HStack, Box, Image, Text, Button } from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { AuthContext } from '../../Provider/Native'\r\nfunction UI() {\r\n  const createHandler = () => { };\r\n  const user = useContext(AuthContext).user\r\n  return (\r\n    <Box mt=\"2\" mx=\"0\" w=\"full\" px={[\"0\", \"1\"]}>\r\n      <HStack\r\n        space=\"4\"\r\n        alignItems=\"center\"\r\n        w=\"full\"\r\n        p=\"3\"\r\n        my=\"2\"\r\n        rounded={[\"0\", \"12\"]}\r\n        borderWidth=\"1\"\r\n        borderColor=\"gray.100\"\r\n      >\r\n        <Image\r\n          source={{\r\n            // uri:\r\n            //   \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719777/200960556_1184264562021915_3530694902678239694_n_u7mk8s.jpg\",\r\n            uri:\r\n              \"https://odanang.net\" +\r\n              (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\r\n          }}\r\n          alt=\"Profile image\"\r\n          size=\"8\"\r\n          mx=\"auto\"\r\n          rounded=\"100\"\r\n        />\r\n        <Box flex=\"1\">\r\n          <Text color=\"gray.500\" fontSize=\"15\">\r\n            Bạn đang nghĩ gì?\r\n          </Text>\r\n        </Box>\r\n        <Link to={{ screen: \"newpost\" }}>\r\n          <Button\r\n            bgColor=\"green.500\"\r\n            _text={{\r\n              color: \"white\",\r\n              fontSize: [\"13\", \"14\"],\r\n              fontWeight: \"600\",\r\n            }}\r\n            rounded=\"8\"\r\n            py=\"2\"\r\n            px=\"4\"\r\n            onPress={createHandler}\r\n          >\r\n            THÊM BÀI VIẾT\r\n          </Button>\r\n        </Link>\r\n      </HStack>\r\n    </Box >\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\r\nimport { PostListRefetch } from \"../List/Controller\";\r\nexport const POST_CREATE = gql`\r\n  mutation($data: PostCreateInput) {\r\n    createPost(data: $data) {\r\n      id\r\n      content\r\n      tags {\r\n        content\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function PostCreate({ UI, post }) {\r\n  const postListRefetch = useReactiveVar(PostListRefetch);\r\n  const [on, { loading, error, data = {} }] = useMutation(POST_CREATE, {\r\n    onCompleted: (data) => {\r\n      postListRefetch();\r\n    },\r\n  });\r\n  if (loading) return \"...\";\r\n  if (error) return error.message;\r\n  const { createPost } = data;\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      on={on}\r\n      createPost={createPost}\r\n      post={post}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport ImageUploading from \"react-images-uploading\"; // upload image\r\nimport {\r\n  Select,\r\n  Box,\r\n  Container,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  Button,\r\n  TextArea,\r\n} from \"native-base\";\r\nimport Controller from \"./Controller\";\r\n\r\nfunction UI({ loading, error, on }) {\r\n  const contentRef = useRef();\r\n  const [content, setContent] = useState(\"\");\r\n  const changeContent = (e) => {\r\n    const content = e.target.value;\r\n    setContent(content);\r\n  };\r\n  const submitHandler = (event) => {\r\n    on({\r\n      variables: {\r\n        data: {\r\n          content: content,\r\n          interactive: { create: { comments: null, reactions: null } },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box maxW=\"560\" mx=\"auto\" w=\"full\" p=\"2\">\r\n      <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"18px\", \"20px\"]}>\r\n        Tạo bài viết mới\r\n      </Heading>\r\n      <Box\r\n        px={5}\r\n        py={7}\r\n        rounded={10}\r\n        borderWidth={1}\r\n        borderColor=\"gray.100\"\r\n        bg=\"gray.50\"\r\n      >\r\n        <VStack space={3}>\r\n          <FormControl>\r\n            <FormControl.Label\r\n              _text={{\r\n                color: \"coolGray.800\",\r\n                fontSize: \"14\",\r\n                fontWeight: 400,\r\n              }}\r\n            >\r\n              Nội dung bài viết\r\n            </FormControl.Label>\r\n            <TextArea\r\n              placeholder=\"Nhập nội dung ...\"\r\n              w=\"full\"\r\n              onChange={changeContent}\r\n              ref={contentRef}\r\n              name=\"content\"\r\n              bgColor=\"white\"\r\n              px={2}\r\n              py={1.5}\r\n              fontSize={14}\r\n              borderWidth={1}\r\n              borderColor=\"gray.100\"\r\n              rounded={6}\r\n              _focus={{\r\n                borderColor: \"green.500\",\r\n              }}\r\n            />\r\n          </FormControl>\r\n\r\n          {!loading && (\r\n            <Button\r\n              onPress={submitHandler}\r\n              rounded={8}\r\n              bgColor=\"green.500\"\r\n              p={2}\r\n              _text={{ color: \"white\", fontWeight: \"600\" }}\r\n            >\r\n              ĐĂNG NGAY\r\n            </Button>\r\n          )}\r\n          {loading && (\r\n            <Button\r\n              rounded={8}\r\n              bgColor=\"green.500\"\r\n              p={2}\r\n              _text={{ color: \"white\", fontWeight: \"600\" }}\r\n            >\r\n              ĐANG TẢI ...\r\n            </Button>\r\n          )}\r\n        </VStack>\r\n      </Box>\r\n      {error && (\r\n        <Box mt={4} p={3.5} rounded={10} borderWidth={1} borderColor=\"red.500\">\r\n          <Text textAlign=\"center\" color=\"red.500\">\r\n            Vui lòng kiểm tra các thông tin\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\nexport default function PostCreateSimple(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import { gql, useMutation } from \"@apollo/client\";\r\n\r\nexport const POST_UPDATE = gql`\r\n  mutation($id: ID!, $data: UpdatePostInput) {\r\n    updatePost(id: $id, data: $data) {\r\n      id\r\n      content\r\n      tags {\r\n        content\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function PostUpdate({ UI, children, post }) {\r\n  const [on, { loading, error, data = {} }] = useMutation(POST_UPDATE);\r\n  const { updatePost } = data;\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      post={post}\r\n      on={on}\r\n      updatePost={updatePost}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\n\r\nfunction UI() {\r\n  const toggleText = (e) => {\r\n    console.log(\"Post Update Text\");\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\r\n      p=\"3\"\r\n      py=\"1.5\"\r\n      bgColor=\"transparrent\"\r\n      onPress={toggleText}\r\n      leftIcon={<FaRegEdit color=\"#22c55e\" fontSize=\"16\" />}\r\n    >\r\n      Sửa bài viết\r\n    </Button>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, useMutation, useReactiveVar } from \"@apollo/client\";\r\nimport { PostListRefetch } from \"../List/Controller\";\r\n\r\nexport const POST_DELETE = gql`\r\n  mutation($id: ID!) {\r\n    deletePost(id: $id) {\r\n      id\r\n      content\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function PostDelete({ UI, id }) {\r\n  const postListRefetch = useReactiveVar(PostListRefetch);\r\n  const [on, { loading, error, data = {} }] = useMutation(POST_DELETE, {\r\n    onCompleted: (data) => {\r\n      postListRefetch();\r\n    },\r\n  });\r\n  const { deletePost } = data;\r\n  const clickDetete = () => {\r\n    on({ variables: { id: id } });\r\n  };\r\n  return (\r\n    <UI\r\n      loading={loading}\r\n      error={error}\r\n      clickDetete={clickDetete}\r\n      post={deletePost}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"native-base\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\nimport PostDelete from \"./Controller\";\r\n\r\nfunction UI({loading, error, clickDetete, post}) {\r\n  const toggleText = (e) => {\r\n    console.log(\"Post Delete Text\");\r\n  };\r\n  const hadleSubmit = (e) => {\r\n    clickDetete();\r\n  };\r\n\r\n  return loading ? (\r\n    \"...\"\r\n  ) : (\r\n    <Button\r\n      _text={{ color: \"gray.400\", fontSize: \"12\", fontWeight: \"600\" }}\r\n      p=\"3\"\r\n      py=\"1.5\"\r\n      bgColor=\"transparrent\"\r\n      onPress={hadleSubmit}\r\n      leftIcon={<FaRegTrashAlt color=\"#22c55e\" fontSize=\"15\" />}\r\n    >\r\n      Xoá bài viết\r\n    </Button>\r\n  );\r\n}\r\nexport default function PostDeleteText(props) {\r\n  return <PostDelete {...props} UI={UI} />;\r\n}","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { Rect, Circle } from \"react-content-loader/native\";\r\nimport { Box } from \"native-base\";\r\n\r\nfunction UI(props) {\r\n  return (\r\n    <Box maxW=\"1005\" w=\"full\" mx=\"auto\" p=\"1%\">\r\n      <ContentLoader\r\n        speed=\"1\"\r\n        w=\"full\"\r\n        mx=\"auto\"\r\n        viewBox=\"0 0 1005 320\"\r\n        backgroundColor=\"#f3f3f3\"\r\n        foregroundColor=\"#ecebeb\"\r\n        animate=\"true\"\r\n      >\r\n        <Circle cx=\"60\" cy=\"60\" r=\"60\" />\r\n        <Rect x=\"150\" y=\"10\" rx=\"15\" ry=\"15\" width=\"220\" height=\"30\" />\r\n        <Rect x=\"150\" y=\"55\" rx=\"10\" ry=\"10\" width=\"150\" height=\"20\" />\r\n        <Rect x=\"150\" y=\"90\" rx=\"10\" ry=\"10\" width=\"280\" height=\"20\" />\r\n        <Rect x=\"0\" y=\"160\" rx=\"10\" ry=\"10\" width=\"1005\" height=\"150\" />\r\n      </ContentLoader>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nexport const RELATIONSHIP_LIST = gql`\r\n  query($where: RelationshipWhereInput) {\r\n    _allRelationshipsMeta(where: $where) {\r\n      count\r\n    }\r\n    allRelationships(where: $where) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport default function RelationshipListController({ UI, where, ...props }) {\r\n  const { loading, error, data = {}, refetch } = useQuery(RELATIONSHIP_LIST, {\r\n    variables: { where },\r\n  });\r\n  const { _allRelationshipsMeta = {}, allRelationships = [] } = data;\r\n  const { count = 0 } = _allRelationshipsMeta;\r\n  return (\r\n    <UI\r\n      {...props}\r\n      loading={loading}\r\n      error={error}\r\n      allRelationships={allRelationships}\r\n      count={count}\r\n      refetch={refetch}\r\n    />\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport Markdown from \"react-native-markdown-display\";\r\n\r\nconst style = {\r\n  // Paras\r\n  paragraph: {\r\n    fontFamily: \"Lexend_400Regular\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"1.5em\",\r\n  },\r\n\r\n  // Headings\r\n  heading1: {\r\n    fontSize: 30,\r\n    fontFamily: \"Lexend_600SemiBold\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"2em\",\r\n  },\r\n  heading2: {\r\n    fontSize: 24,\r\n    fontFamily: \"Lexend_600SemiBold\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"1.75em\",\r\n  },\r\n  heading3: {\r\n    fontSize: 20,\r\n    fontFamily: \"Lexend_600SemiBold\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"1.75em\",\r\n  },\r\n  heading4: {\r\n    fontSize: 18,\r\n    fontFamily: \"Lexend_600SemiBold\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"1.5em\",\r\n  },\r\n  heading5: {\r\n    fontSize: 16,\r\n    fontFamily: \"Lexend_600SemiBold\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"1.375em\",\r\n  },\r\n  heading6: {\r\n    fontSize: 14,\r\n    fontFamily: \"Lexend_600SemiBold\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"1.25em\",\r\n  },\r\n\r\n  // Horizontal Rule\r\n  hr: {\r\n    backgroundColor: \"#e4e4e7\",\r\n    height: 1,\r\n    marginBottom: 6,\r\n  },\r\n\r\n  // Lists\r\n  bullet_list: {},\r\n  ordered_list: {},\r\n  list_item: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    fontFamily: \"Lexend_400Regular\",\r\n    color: \"#27272a\",\r\n    lineHeight: \"1.5em\",\r\n  },\r\n\r\n  // Links\r\n  link: {\r\n    textDecorationLine: \"none\",\r\n    color: \"#16a34a\",\r\n  },\r\n\r\n  // Blockquotes\r\n  blockquote: {\r\n    backgroundColor: \"#fafafa\",\r\n    borderColor: \"#e4e4e7\",\r\n    borderLeftWidth: 3,\r\n    margin: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 4,\r\n  },\r\n\r\n  // Tables\r\n  table: {\r\n    borderWidth: \"0.5px\",\r\n    borderColor: \"#f4f4f5\",\r\n    borderCollapse: \"collapse\",\r\n  },\r\n  thead: {},\r\n  tbody: {},\r\n  th: {\r\n    padding: 5,\r\n    flex: 1,\r\n    borderWidth: \"0.5px\",\r\n    borderColor: \"#f4f4f5\",\r\n  },\r\n  tr: {\r\n    flexDirection: \"row\",\r\n  },\r\n  td: {\r\n    borderWidth: \"0.5px\",\r\n    borderColor: \"#f4f4f5\",\r\n    flex: 1,\r\n    padding: 5,\r\n  },\r\n\r\n  // Images\r\n  image: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    display: \"block\",\r\n  },\r\n};\r\n\r\nexport default function Field({\r\n  children = \"\",\r\n  round,\r\n  step,\r\n  className,\r\n  strongProps,\r\n  pProps,\r\n  ...props\r\n}) {\r\n  return useMemo(() => {\r\n    return <Markdown children={children} style={style} mergeStyle=\"true\" />;\r\n  }, [children]);\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  HStack,\r\n  Image,\r\n  VStack,\r\n  Text,\r\n  Divider,\r\n  Stack,\r\n} from \"native-base\";\r\nimport { PostListGrid } from \"../../Post\";\r\nimport {\r\n  RelationshipUpdateButton,\r\n  RelationshipDeleteDelete,\r\n  RelationshipCreateButton,\r\n  RelationshipDeleteActive,\r\n} from \"../../Relationship\";\r\nimport Controller from \"./Controller\";\r\nimport DetailSkeleton from \"./DetailSkeleton\";\r\nimport { HiOutlineDotsHorizontal } from \"react-icons/hi\";\r\nimport PostListCount from \"../../Post/List/Count\";\r\nimport RelationshipListCount from \"../../Relationship/List/Count\";\r\nimport Field from \"../../Field\";\r\nimport { AuthContext } from \"../../Provider/Native\";\r\nfunction UI({ loading, error, user, posts, relationship, count }) {\r\n  const currentUser = useContext(AuthContext).user;\r\n  if (loading) return <DetailSkeleton />;\r\n  if (error) return \"error\";\r\n  return (\r\n    <VStack maxw=\"full\" mx=\"auto\" my=\"5\" w=\"full\" space=\"4\">\r\n      <HStack space=\"7\" m=\"1%\" alignItems=\"center\">\r\n        <Box>\r\n          <Image\r\n            source={{\r\n              uri:\r\n                \"https://odanang.net\" +\r\n                (user?.avatar?.publicUrl || \"/upload/img/no-image.png\"),\r\n            }}\r\n            alt=\"Alternate Text\"\r\n            w={[\"100px\", \"120px\"]}\r\n            h={[\"100px\", \"120px\"]}\r\n            rounded=\"100\"\r\n          />\r\n        </Box>\r\n        <VStack flex=\"1\" space={[\"2\", \"3\"]}>\r\n          <HStack space=\"2\">\r\n            <Text fontSize={[\"20\", \"22\"]} fontWeight=\"600\">\r\n              {user?.name}\r\n            </Text>\r\n            <Button bgColor=\"transparent\" p=\"2\" color=\"gray.500\">\r\n              <HiOutlineDotsHorizontal />\r\n            </Button>\r\n          </HStack>\r\n\r\n          <HStack space=\"4\">\r\n            <Text fontSize=\"14\" color=\"gray.500\">\r\n              {/* <PostListCount /> bài đăng */}\r\n              {posts.length} bài đăng\r\n            </Text>\r\n            <Text fontSize=\"14\" color=\"gray.500\">\r\n              {count} bạn bè\r\n            </Text>\r\n          </HStack>\r\n        </VStack>\r\n      </HStack>\r\n\r\n      <VStack space=\"2\" mx=\"1%\" my={[\"1\", \"0\"]}>\r\n        <Stack\r\n          space=\"2\"\r\n          alignItems={[\"start\", \"center\"]}\r\n          direction={[\"column\", \"row\"]}\r\n        >\r\n          {/* <Text mr=\"4\" fontSize=\"15\" fontWeight=\"600\" color=\"gray.500\">\r\n            Trần Ngọc Huy đã gửi lời mời kết bạn\r\n          </Text>\r\n          <HStack space=\"2\">\r\n            <Box w=\"130px\">\r\n              <RelationshipUpdateButton />\r\n            </Box>\r\n            <Box w=\"130px\">\r\n              <RelationshipDeleteDelete />\r\n            </Box>\r\n          </HStack> */}\r\n          {/* <HStack space=\"2\">\r\n            <RelationshipCreateButton />\r\n          </HStack> */}\r\n          {user?.id !== currentUser?.id && relationship === null && (\r\n            <HStack space=\"2\">\r\n              <RelationshipCreateButton toId={user?.id} />\r\n            </HStack>\r\n          )}\r\n          {user?.id !== currentUser?.id && relationship?.isAccepted === true && (\r\n            <HStack space=\"2\">\r\n              <RelationshipDeleteActive id={relationship.id} />\r\n            </HStack>\r\n          )}\r\n          {user?.id !== currentUser?.id &&\r\n            (relationship?.isAccepted === false ||\r\n              relationship?.isAccepted === null) &&\r\n            relationship?.createdBy?.id === currentUser.id && (\r\n              <HStack space=\"2\">\r\n                <RelationshipDeleteDelete id={relationship.id} />\r\n              </HStack>\r\n            )}\r\n          {user?.id !== currentUser?.id &&\r\n            (relationship?.isAccepted === false ||\r\n              relationship?.isAccepted === null) &&\r\n            relationship?.to?.id === currentUser?.id &&\r\n            relationship?.createdBy?.id === user?.id && (\r\n              <HStack space=\"2\">\r\n                <Text mr=\"4\" fontSize=\"15\" fontWeight=\"600\" color=\"gray.500\">\r\n                  {user.name} đã gửi lời mời kết bạn\r\n                </Text>\r\n                <HStack space=\"2\">\r\n                  <Box w=\"130px\">\r\n                    <RelationshipUpdateButton id={relationship.id} />\r\n                  </Box>\r\n                  <Box w=\"130px\">\r\n                    <RelationshipDeleteDelete id={relationship.id} />\r\n                  </Box>\r\n                </HStack>\r\n              </HStack>\r\n            )}\r\n        </Stack>\r\n      </VStack>\r\n\r\n      <VStack space=\"2\" m=\"1%\">\r\n        <Text fontSize=\"18\" fontWeight=\"600\" color=\"gray.700\">\r\n          Giới thiệu\r\n        </Text>\r\n        <Divider bg=\"gray.100\" w=\"full\" my=\"1\" orientation=\"horizontal\" />\r\n        <Text fontSize=\"14\" fontWeight=\"400\" color=\"gray.600\" lineHeight=\"26px\">\r\n          <Field>{user.description}</Field>\r\n        </Text>\r\n      </VStack>\r\n      {user?.id === currentUser?.id && (\r\n        <VStack space=\"2\" m=\"1%\">\r\n          <HStack justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Text fontSize=\"18\" fontWeight=\"600\" color=\"gray.700\">\r\n              Bạn bè\r\n            </Text>\r\n            <Link to={{ screen: \"friends\" }}>\r\n              <Text color=\"green.500\" textDecoration=\"none\">\r\n                Xem tất cả\r\n              </Text>\r\n            </Link>\r\n          </HStack>\r\n          <Divider bg=\"gray.100\" w=\"full\" my=\"1\" orientation=\"horizontal\" />\r\n        </VStack>\r\n      )}\r\n      <Box>\r\n        <VStack w=\"98%\" space=\"2\" m=\"1%\">\r\n          <Text fontSize=\"18\" fontWeight=\"600\" color=\"gray.700\">\r\n            Bài viết\r\n          </Text>\r\n          <Divider bg=\"gray.100\" w=\"full\" my=\"1\" orientation=\"horizontal\" />\r\n        </VStack>\r\n        <PostListGrid />\r\n      </Box>\r\n    </VStack>\r\n  );\r\n}\r\nexport { UI };\r\nexport default function UserItemDetail(props) {\r\n  return <Controller {...props} UI={UI} />;\r\n}\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  TextArea,\r\n  Button,\r\n  HStack,\r\n  Image,\r\n  Radio,\r\n  Input,\r\n} from \"native-base\";\r\nfunction UI({ loading, error, user, navigation }) {\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n\r\n  const [username, setUsername] = useState(\"Nguyễn Kim Huy\");\r\n  const [phone, setPhone] = useState(\"0394123560\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [sex, setSex] = useState(\"male\");\r\n  const [inputError, setInputError] = useState(null);\r\n\r\n  const submitSignUp = () => {\r\n    setInputError(null);\r\n\r\n    // Validation username\r\n    if (!username.trim() || !isNaN(username) || !username.includes(\" \")) {\r\n      setInputError(\"Kiểm tra lại họ và tên\");\r\n      return;\r\n    }\r\n\r\n    // Validation phone number\r\n    if (\r\n      !phone.trim() ||\r\n      (!(phone.length === 10) && !(phone.length === 11)) ||\r\n      isNaN(phone)\r\n    ) {\r\n      setInputError(\"Kiểm tra lại số điện thoại\");\r\n      return;\r\n    }\r\n\r\n    console.log(username, phone, description, sex);\r\n\r\n    // Save change\r\n    // if (!loading);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box maxW=\"400\" w=\"full\" mx=\"auto\" mt=\"4\">\r\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"18px\", \"20px\"]}>\r\n          Chỉnh sửa trang cá nhân\r\n        </Heading>\r\n        <Box\r\n          px={5}\r\n          py={7}\r\n          rounded={10}\r\n          borderWidth={1}\r\n          borderColor=\"gray.100\"\r\n          bg=\"gray.50\"\r\n        >\r\n          <VStack space={3}>\r\n            <VStack space=\"4\" mb=\"3\">\r\n              <Image\r\n                source={{\r\n                  uri:\r\n                    \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719777/200960556_1184264562021915_3530694902678239694_n_u7mk8s.jpg\",\r\n                }}\r\n                alt=\"Alternate Text\"\r\n                size=\"lg\"\r\n                mx=\"auto\"\r\n                rounded=\"100\"\r\n              />\r\n              <Button\r\n                _text={{\r\n                  color: \"gray.400\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: \"600\",\r\n                }}\r\n                p=\"2\"\r\n                rounded=\"8\"\r\n                w=\"50%\"\r\n                bgColor=\"gray.100\"\r\n                mx=\"auto\"\r\n              >\r\n                Thay đổi ảnh đại diện\r\n              </Button>\r\n            </VStack>\r\n            <FormControl>\r\n              <FormControl.Label\r\n                _text={{\r\n                  color: \"gray.800\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                Họ và tên\r\n              </FormControl.Label>\r\n              <Input\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                value={username}\r\n                name=\"username\"\r\n                bgColor=\"white\"\r\n                px={2}\r\n                py={1.5}\r\n                fontSize={14}\r\n                borderWidth={1}\r\n                borderColor=\"gray.100\"\r\n                rounded={6}\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label\r\n                _text={{\r\n                  color: \"gray.800\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                Số điện thoại\r\n              </FormControl.Label>\r\n              <Input\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                value={phone}\r\n                name=\"phone\"\r\n                bgColor=\"white\"\r\n                px={2}\r\n                py={1.5}\r\n                fontSize={14}\r\n                borderWidth={1}\r\n                borderColor=\"gray.100\"\r\n                rounded={6}\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label\r\n                _text={{\r\n                  color: \"gray.800\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                Giới thiệu\r\n              </FormControl.Label>\r\n              <TextArea\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                value={description}\r\n                name=\"description\"\r\n                bgColor=\"white\"\r\n                px={2}\r\n                py={1.5}\r\n                fontSize={14}\r\n                borderWidth={1}\r\n                borderColor=\"gray.100\"\r\n                rounded={6}\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl mb=\"2\">\r\n              <FormControl.Label\r\n                _text={{\r\n                  color: \"gray.800\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                Giới tính\r\n              </FormControl.Label>\r\n              <Radio.Group\r\n                name=\"sex\"\r\n                accessibilityLabel=\"sex\"\r\n                value={sex}\r\n                onChange={(newValue) => {\r\n                  setSex(newValue);\r\n                }}\r\n              >\r\n                <HStack space=\"8\">\r\n                  <Radio\r\n                    colorScheme=\"green\"\r\n                    size=\"sm\"\r\n                    value=\"male\"\r\n                    borderWidth=\"1\"\r\n                    borderColor=\"gray.300\"\r\n                  >\r\n                    <Text fontSize=\"13\" ml=\"1.5\">\r\n                      Nam\r\n                    </Text>\r\n                  </Radio>\r\n                  <Radio\r\n                    borderWidth=\"1\"\r\n                    borderColor=\"gray.300\"\r\n                    colorScheme=\"green\"\r\n                    size=\"sm\"\r\n                    value=\"female\"\r\n                  >\r\n                    <Text fontSize=\"13\" ml=\"1.5\">\r\n                      Nữ\r\n                    </Text>\r\n                  </Radio>\r\n                  <Radio\r\n                    borderWidth=\"1\"\r\n                    borderColor=\"gray.300\"\r\n                    colorScheme=\"green\"\r\n                    size=\"sm\"\r\n                    value=\"other\"\r\n                  >\r\n                    <Text fontSize=\"13\" ml=\"1.5\">\r\n                      Khác\r\n                    </Text>\r\n                  </Radio>\r\n                </HStack>\r\n              </Radio.Group>\r\n            </FormControl>\r\n            {!loading && (\r\n              <Button\r\n                onPress={submitSignUp}\r\n                rounded={8}\r\n                bgColor=\"green.500\"\r\n                p={2}\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                LƯU THAY ĐỔI\r\n              </Button>\r\n            )}\r\n            {loading && (\r\n              <Button\r\n                rounded={8}\r\n                bgColor=\"green.500\"\r\n                p={2}\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                ĐANG TẢI ...\r\n              </Button>\r\n            )}\r\n          </VStack>\r\n        </Box>\r\n        {error && (\r\n          <Box\r\n            my={4}\r\n            p={3.5}\r\n            rounded={10}\r\n            borderWidth={1}\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              Vui lòng sử dụng số điện thoại khác\r\n            </Text>\r\n          </Box>\r\n        )}\r\n        {inputError && (\r\n          <Box\r\n            my={4}\r\n            p={3.5}\r\n            rounded={10}\r\n            borderWidth={1}\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              {inputError}\r\n            </Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default UI;\r\n","import React, { Fragment, useRef, useState } from \"react\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Heading,\r\n  VStack,\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n} from \"native-base\";\r\nfunction UI({ loading, error, user, navigation }) {\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n\r\n  const passwordOldRef = useRef();\r\n  const passwordNewRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const [inputError, setInputError] = useState(null);\r\n\r\n  const submitSignUp = () => {\r\n    setInputError(null);\r\n\r\n    const passwordOld = passwordOldRef.current.value;\r\n    const passwordNew = passwordNewRef.current.value;\r\n    const passwordConfirm = passwordConfirmRef.current.value;\r\n\r\n    // Validation password\r\n    if (passwordOld.trim().length < 6) {\r\n      setInputError(\"Kiểm tra lại mật khẩu cũ\");\r\n      return;\r\n    }\r\n\r\n    if (passwordNew.trim().length < 6) {\r\n      setInputError(\"Độ dài mật khẩu mới ít nhất 6 kí tự\");\r\n      return;\r\n    }\r\n\r\n    if (passwordNew !== passwordConfirm) {\r\n      setInputError(\"Xác nhận mật khẩu không đúng\");\r\n      return;\r\n    }\r\n\r\n    console.log(passwordOld, passwordNew, passwordConfirm);\r\n\r\n    // Save change\r\n    // if (!loading);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box maxW=\"350\" w=\"full\" mx=\"auto\" mt=\"4\">\r\n        <Heading my=\"20px\" textAlign=\"center\" fontSize={[\"18px\", \"20px\"]}>\r\n          Đổi mật khẩu\r\n        </Heading>\r\n        <Box\r\n          px={5}\r\n          py={7}\r\n          rounded={10}\r\n          borderWidth={1}\r\n          borderColor=\"gray.100\"\r\n          bg=\"gray.50\"\r\n        >\r\n          <VStack space={3}>\r\n            <FormControl>\r\n              <FormControl.Label\r\n                _text={{\r\n                  color: \"coolGray.800\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                Mật khẩu cũ\r\n              </FormControl.Label>\r\n              <Input\r\n                ref={passwordOldRef}\r\n                name=\"oldpassword\"\r\n                type=\"password\"\r\n                bgColor=\"white\"\r\n                px={2}\r\n                py={1.5}\r\n                fontSize={14}\r\n                borderWidth={1}\r\n                borderColor=\"gray.100\"\r\n                rounded={6}\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label\r\n                _text={{\r\n                  color: \"coolGray.800\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                Mật khẩu mới\r\n              </FormControl.Label>\r\n              <Input\r\n                ref={passwordNewRef}\r\n                name=\"newpassword\"\r\n                type=\"password\"\r\n                bgColor=\"white\"\r\n                px={2}\r\n                py={1.5}\r\n                fontSize={14}\r\n                borderWidth={1}\r\n                borderColor=\"gray.100\"\r\n                rounded={6}\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormControl.Label\r\n                _text={{\r\n                  color: \"coolGray.800\",\r\n                  fontSize: \"14\",\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                Xác nhận mật khẩu mới\r\n              </FormControl.Label>\r\n              <Input\r\n                ref={passwordConfirmRef}\r\n                name=\"confirmpassword\"\r\n                type=\"password\"\r\n                bgColor=\"white\"\r\n                px={2}\r\n                py={1.5}\r\n                fontSize={14}\r\n                borderWidth={1}\r\n                borderColor=\"gray.100\"\r\n                rounded={6}\r\n                _focus={{\r\n                  borderColor: \"green.500\",\r\n                }}\r\n              />\r\n            </FormControl>\r\n\r\n            {!loading && (\r\n              <Button\r\n                onPress={submitSignUp}\r\n                rounded={8}\r\n                bgColor=\"green.500\"\r\n                p={2}\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                LƯU THAY ĐỔI\r\n              </Button>\r\n            )}\r\n            {loading && (\r\n              <Button\r\n                rounded={8}\r\n                bgColor=\"green.500\"\r\n                p={2}\r\n                _text={{ color: \"white\", fontWeight: \"600\" }}\r\n              >\r\n                ĐANG TẢI ...\r\n              </Button>\r\n            )}\r\n          </VStack>\r\n        </Box>\r\n        {error && (\r\n          <Box\r\n            mt={4}\r\n            p={3.5}\r\n            rounded={10}\r\n            borderWidth={1}\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              Vui lòng kiểm tra lại mật khẩu cũ\r\n            </Text>\r\n          </Box>\r\n        )}\r\n        {inputError && (\r\n          <Box\r\n            mt={4}\r\n            p={3.5}\r\n            rounded={10}\r\n            borderWidth={1}\r\n            borderColor=\"red.500\"\r\n          >\r\n            <Text textAlign=\"center\" color=\"red.500\">\r\n              {inputError}\r\n            </Text>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { Container, HStack, Box, Text, VStack, Stack } from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\nfunction UI() {\r\n  return (\r\n    <Box\r\n      w=\"full\"\r\n      borderTopWidth=\"1px\"\r\n      borderColor=\"gray.100\"\r\n      py=\"12px\"\r\n      mt=\"40px\"\r\n    >\r\n      <Container w=\"container.lg\" mx=\"auto\" maxW=\"full\" px=\"8px\">\r\n        <HStack\r\n          borderBottomWidth=\"1px\"\r\n          borderColor=\"gray.100\"\r\n          pb=\"12px\"\r\n          mb=\"12px\"\r\n          w=\"100%\"\r\n        >\r\n          <Text color=\"gray.500\" fontSize={[\"12px\", \"13px\"]}>\r\n            Tiếng Việt. English. 中文 (Zhōngwén). 汉语, 漢語, 日本語 (にほんご).\r\n            한국어, français, langue française.\r\n          </Text>\r\n        </HStack>\r\n        <Stack\r\n          justifyContent=\"space-between\"\r\n          w=\"100%\"\r\n          direction={[\"column\", \"row\"]}\r\n        >\r\n          <VStack space=\"2px\">\r\n            <Text color=\"gray.500\" fontSize={[\"12px\", \"13px\"]}>\r\n              Kilogram - Mạng xã hội sinh viên.\r\n            </Text>\r\n            <Text color=\"gray.500\" fontSize={[\"12px\", \"13px\"]}>\r\n              Phiên bản v1.0-beta.0\r\n            </Text>\r\n          </VStack>\r\n          <VStack space=\"2px\">\r\n            <Text\r\n              color=\"gray.500\"\r\n              fontSize={[\"12px\", \"13px\"]}\r\n              textAlign=\"right\"\r\n            >\r\n              Đồ án công nghệ phần mềm PBL6.\r\n            </Text>\r\n            <Text\r\n              color=\"gray.500\"\r\n              fontSize={[\"12px\", \"13px\"]}\r\n              textAlign=\"right\"\r\n            >\r\n              Đại học Bách Khoa - Đại học Đà Nẵng.\r\n              Các thành viên:\r\n              1. Trần Ngọc Huy\r\n              2. Nguyễn Kim Huy\r\n              3. Trần Diệp Phương\r\n              4. Trần Vũ Minh Triết\r\n            </Text>\r\n          </VStack>\r\n        </Stack>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import SignIn from \"./SignIn\";\r\nimport Home from \"./Home\";\r\nimport User from \"./User\";\r\nimport Post from \"./Post\";\r\nimport SignUp from \"./SignUp\";\r\nimport NewPost from \"./NewPost\";\r\nimport FriendSuggestion from \"./FriendSuggestion\";\r\nimport FriendRequest from \"./FriendRequest\";\r\nimport UserUpdate from \"./UserUpdate\";\r\nimport UpdatePassword from \"./UpdatePassword\";\r\nimport Album from \"./Album\";\r\nimport EarlyAcess from \"./EarlyAcess\";\r\nimport Friends from \"./Friends\";\r\nimport Result from \"./Result\";\r\nimport Markdown from \"./Markdown\";\r\nimport Test from \"./Test\";\r\n\r\nexport default {\r\n  initialRouteName: \"home\",\r\n  auth: { component: SignIn, requires: [\"home\"] },\r\n  screens: [\r\n    {\r\n      name: \"home\",\r\n      component: Home,\r\n      options: { title: \"Trang chủ\" },\r\n    },\r\n    { name: \"users\", component: User, options: { title: \"Trang cá nhân\" } },\r\n    { name: \"posts\", component: Post, options: { title: \"Trang bài viết\" } },\r\n    { name: \"signup\", component: SignUp, options: { title: \"Đăng ký\" } },\r\n    {\r\n      name: \"newpost\",\r\n      component: NewPost,\r\n      options: { title: \"Tạo bài viết mới\" },\r\n    },\r\n    {\r\n      name: \"friendsuggestion\",\r\n      component: FriendSuggestion,\r\n      options: { title: \"Bạn bè gợi ý\" },\r\n    },\r\n    {\r\n      name: \"friendrequest\",\r\n      component: FriendRequest,\r\n      options: { title: \"Lời mời kết bạn\" },\r\n    },\r\n    {\r\n      name: \"userupdate\",\r\n      component: UserUpdate,\r\n      options: { title: \"Chỉnh sửa trang cá nhân\" },\r\n    },\r\n    {\r\n      name: \"updatepassword\",\r\n      component: UpdatePassword,\r\n      options: { title: \"Đổi mật khẩu\" },\r\n    },\r\n    {\r\n      name: \"album\",\r\n      component: Album,\r\n      options: { title: \"Đã lưu\" },\r\n    },\r\n    {\r\n      name: \"earlyaccess\",\r\n      component: EarlyAcess,\r\n      options: { title: \"Kilogram - Sắp ra mắt\" },\r\n    },\r\n    {\r\n      name: \"friends\",\r\n      component: Friends,\r\n      options: { title: \"Tất cả bạn bè\" },\r\n    },\r\n    {\r\n      name: \"result\",\r\n      component: Result,\r\n      options: { title: \"Kết quả tìm kiếm\" },\r\n    },\r\n    {\r\n      name: \"markdown\",\r\n      component: Markdown,\r\n      options: { title: \"Markdown\" },\r\n    },\r\n    {\r\n      name: \"test\",\r\n      component: Test,\r\n      options: { title: \"Test Component\" },\r\n    },\r\n  ],\r\n  linking: {\r\n    prefixes: [\"https://odanang.net\"],\r\n    config: {\r\n      screens: {\r\n        home: \"/\",\r\n        users: \"users/:id\",\r\n        posts: \"posts/:id\",\r\n        signup: \"signup\",\r\n        newpost: \"newpost\",\r\n        friendsuggestion: \"friendsuggestion\",\r\n        friendrequest: \"friendrequest\",\r\n        userupdate: \"userupdate\",\r\n        updatepassword: \"updatepassword\",\r\n        album: \"album\",\r\n        earlyaccess: \"earlyaccess\",\r\n        friends: \"friends\",\r\n        result: \"result\",\r\n        markdown: \"markdown\",\r\n        test: \"test\",\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n/*\r\nCác trang:\r\nTrang đăng nhập                 /login                Form đăng nhập\r\nTrang đăng ký                   /signup               Form đăng ký\r\nTrang chủ                       /                     Nút thêm bài viết, newfeed của tài khoản, gợi ý bạn bè fixed bên phải\r\nTrang thêm bài viết             /newpost              Form thêm bài viết *\r\nTrang sửa bài viết              /updatepost           Form sửa bài viết *\r\nTrang bài viết đơn              /[postID]             Hiển thị duy nhất 1 bài viết\r\nTrang cá nhân                   /[userID]             Hiển thị thông tin cá nhân, có hiện quan hệ bạn bè\r\nTrang bạn bè                    /[userID]/friends     Hiển thị toàn bộ bạn bè của user *\r\nTrang gợi ý bạn bè              /friendsuggestion     Hiển thị danh sách bạn bè gợi ý\r\nTrang lời mời kết bạn           /friendrequest        Hiển thị danh sách lời mời kết bạn\r\nTrang chỉnh sửa trang cá nhân   /userupdate           Form đổi thông tin cá nhân\r\nTrang đổi mật khẩu              /userupdate           Form đổi mật khẩu\r\n*/\r\n","import React, { Fragment } from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserSignInSimple } from \"../ui/User\";\r\nimport { FooterSimple } from \"../ui/Footer\";\r\nexport default function SignIn({ navigation }) {\r\n  return (\r\n    <Fragment>\r\n      <Container w=\"container.lg\" m=\"auto\" mt=\"0\" maxW=\"90%\">\r\n        <UserSignInSimple navigation={navigation} />\r\n      </Container>\r\n      <FooterSimple />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Container, HStack, Box, Flex } from \"native-base\";\r\nimport {\r\n  UserAuthShort,\r\n  UserSignOutButton,\r\n  UserListSuggestFixed,\r\n} from \"../ui/User\";\r\nimport { PostListSimple, PostCreateButton } from \"../ui/Post\";\r\nimport EarlyAccess from \"./EarlyAcess\";\r\nimport { AuthContext } from \"../ui/Provider/Native\";\r\n\r\nexport default function Home({ navigation }) {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <Container\r\n      w=\"container.lg\"\r\n      margin=\"auto\"\r\n      mt=\"64px\"\r\n      maxW=\"full\"\r\n      px={[\"0\", \"8px\"]}\r\n    >\r\n      <Flex w=\"full\" direction=\"row\">\r\n        <Box\r\n          flex={[1, 1, 1, 9]}\r\n          maxW=\"680px\"\r\n          mx={[\"auto\", \"auto\", \"auto\", \"0\"]}\r\n        >\r\n          <PostCreateButton />\r\n          <PostListSimple first={5} />\r\n        </Box>\r\n        <Box flex={[0, 0, 0, 3]} display={[\"none\", \"none\", \"none\", \"block\"]}>\r\n          <Box\r\n            w=\"full\"\r\n            py=\"8px\"\r\n            pl=\"24px\"\r\n            pr=\"8px\"\r\n            position=\"sticky\"\r\n            top=\"64px\"\r\n          >\r\n            <UserListSuggestFixed id={user?.id} />\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserItemDetail } from \"../ui/User\";\r\nimport { useRoute } from \"@react-navigation/core\";\r\nimport { AuthContext } from \"../ui/Provider/Native\";\r\n\r\nexport default function User({ navigation }) {\r\n  const { user } = useContext(AuthContext);\r\n  const { params = {} } = useRoute();\r\n  const { id } = params;\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <UserItemDetail id={id} my_id={user?.id} />\r\n    </Container>\r\n  );\r\n}","import React from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { PostItemDetail } from \"../ui/Post\";\r\nimport { useRoute } from \"@react-navigation/core\";\r\n\r\nexport default function Post({ navigation }) {\r\n  const { params = {} } = useRoute();\r\n  const { id } = params;\r\n  return (\r\n    <Container\r\n      w=\"container.lg\"\r\n      margin=\"auto\"\r\n      mt=\"64px\"\r\n      maxW=\"full\"\r\n      px={[\"0\", \"8px\"]}\r\n    >\r\n      <PostItemDetail id={id}/>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserSignUpSimple } from \"../ui/User\";\r\nimport { FooterSimple } from \"../ui/Footer\";\r\nexport default function SignIn({ navigation }) {\r\n  return (\r\n    <Fragment>\r\n      <Container w=\"container.lg\" m=\"auto\" mt=\"0\" maxW=\"90%\">\r\n        <UserSignUpSimple navigation={navigation} />\r\n      </Container>\r\n      <FooterSimple />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { PostCreateSimple } from \"../ui/Post\";\r\n\r\nexport default function NewPost({ navigation }) {\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <PostCreateSimple />\r\n    </Container>\r\n  );\r\n}\r\n","import React,{useContext} from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserListSuggest } from \"../ui/User\";\r\nimport { AuthContext } from \"../ui/Provider/Native\";\r\nexport default function NewPost({ navigation }) {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <UserListSuggest id={user?.id}/>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserListRequest } from \"../ui/User\";\r\n\r\nimport { AuthContext } from \"../ui/Provider/Native\";\r\nexport default function NewPost({ navigation }) {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <UserListRequest id={user?.id} />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserUpdateSimple } from \"../ui/User\";\r\n\r\nexport default function UserUpdate({ navigation }) {\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <UserUpdateSimple />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserUpdatePassword } from \"../ui/User\";\r\n\r\nexport default function UserUpdate({ navigation }) {\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <UserUpdatePassword />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { AlbumListSimple } from \"../ui/Album\";\r\n\r\nexport default function NewPost({ navigation }) {\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <AlbumListSimple />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Heading,\r\n  Image,\r\n  Box,\r\n  Text,\r\n  VStack,\r\n  HStack,\r\n} from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { FooterSimple } from \"../ui/Footer\";\r\nimport { UserListCount } from \"../ui/User\";\r\nimport { AuthContext } from \"../ui/Provider/Native\";\r\nexport default function EarlyAccess({ navigation }) {\r\n  const { loading, error, user } = useContext(AuthContext);\r\n  return (\r\n    <Fragment>\r\n      <Container w=\"container.lg\" margin=\"auto\" mt=\"24px\" maxW=\"full\" px=\"8px\">\r\n        <VStack\r\n          maxW=\"500\"\r\n          w=\"full\"\r\n          mx=\"auto\"\r\n          mt=\"100px\"\r\n          alignItems=\"center\"\r\n          space=\"24px\"\r\n        >\r\n          <Image\r\n            source={{\r\n              uri:\r\n                \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632635691/favicon_gc42jc.svg\",\r\n            }}\r\n            alt=\"Logo\"\r\n            size=\"100px\"\r\n            mx=\"auto\"\r\n          />\r\n          <VStack alignItems=\"center\">\r\n            <Text\r\n              fontSize=\"18px\"\r\n              fontWeight=\"600\"\r\n              mb=\"8px\"\r\n              textAlign=\"center\"\r\n              maxW={[\"80%\", \"100%\"]}\r\n            >\r\n              KILOGRAM - MẠNG XÃ HỘI DÀNH CHO SINH VIÊN\r\n            </Text>\r\n            <Text color=\"gray.500\" fontSize=\"16px\">\r\n              Được phát triển bởi sinh viên ĐH BKĐN\r\n            </Text>\r\n          </VStack>\r\n          <Heading\r\n            fontSize={[\"54px\", \"80px\"]}\r\n            color=\"green.500\"\r\n            my=\"8px\"\r\n            textAlign=\"center\"\r\n          >\r\n            SẮP RA MẮT\r\n          </Heading>\r\n          <Box>\r\n            <HStack justifyContent=\"center\" mb=\"8\">\r\n              <Text fontSize=\"18\" color=\"gray.500\" mr={3}>\r\n                Số người đăng ký:\r\n              </Text>\r\n              <Box fontSize=\"18px\" fontWeight=\"600\">\r\n                <UserListCount />\r\n              </Box>\r\n            </HStack>\r\n            {!user && (\r\n              <HStack justifyContent=\"center\">\r\n                <Text>Hãy </Text>\r\n                <Link to={{ screen: \"signup\" }}>\r\n                  <Text color=\"green.500\" textDecoration=\"none\">\r\n                    đăng ký\r\n                  </Text>\r\n                </Link>\r\n                <Text> một tài khoản để giữ chỗ </Text>\r\n              </HStack>\r\n            )}\r\n          </Box>\r\n        </VStack>\r\n      </Container>\r\n      <FooterSimple />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { UserListSimple } from \"../ui/User\";\r\nimport { AuthContext } from \"../ui/Provider/Native\";\r\nexport default function NewPost({ navigation }) {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <UserListSimple id={user?.id} />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Container, Box, Flex, Text } from \"native-base\";\r\nimport { UserListSuggestFixed } from \"../ui/User\";\r\nimport { PostListSearch } from \"../ui/Post\";\r\nimport { UserListSearch } from \"../ui/User\";\r\nimport { useRoute } from \"@react-navigation/core\";\r\nimport { AuthContext } from \"../ui/Provider/Native\";\r\nexport default function Result({ navigation }) {\r\n  const { user } = useContext(AuthContext);\r\n  const { params = {} } = useRoute();\r\n  const { keyword } = params;\r\n  return (\r\n    <Container\r\n      w=\"container.lg\"\r\n      margin=\"auto\"\r\n      mt=\"64px\"\r\n      maxW=\"full\"\r\n      px={[\"0\", \"8px\"]}\r\n    >\r\n      <Flex w=\"full\" direction=\"row\">\r\n        <Box\r\n          flex={[1, 1, 1, 9]}\r\n          maxW=\"680px\"\r\n          mx={[\"auto\", \"auto\", \"auto\", \"0\"]}\r\n        >\r\n          <Box w=\"full\" mt=\"20px\" mb=\"8px\" px=\"0.5%\">\r\n            <Text\r\n              fontSize={[\"16\", \"18\"]}\r\n              fontWeight=\"600\"\r\n              color=\"gray.700\"\r\n              px={[\"8px\", \"0\"]}\r\n            >\r\n              Kết quả tìm kiếm cho {keyword}\r\n            </Text>\r\n          </Box>\r\n          <UserListSearch keyword={keyword} my_id={user?.id} />\r\n          {/* <PostListSearch /> */}\r\n        </Box>\r\n        <Box flex={[0, 0, 0, 3]} display={[\"none\", \"none\", \"none\", \"block\"]}>\r\n          <Box\r\n            w=\"full\"\r\n            py=\"8px\"\r\n            pl=\"24px\"\r\n            pr=\"8px\"\r\n            position=\"sticky\"\r\n            top=\"64px\"\r\n          >\r\n            <UserListSuggestFixed />\r\n          </Box>\r\n        </Box>\r\n      </Flex>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Box } from \"native-base\";\r\nimport Field from \"../ui/Field\";\r\n\r\nconst content = `\r\n# Kilogram\r\n## Mạng xã hội dành cho sinh viên\r\n\r\n![Logo](https://res.cloudinary.com/cloudinaryassets/image/upload/v1633593799/logo-header_qh37fo.svg)\r\n\r\n### Giới thiệu\r\n\r\n---\r\n\r\nĐồ án công nghệ phần mềm **PBL6**.\r\nĐại học Bách Khoa - Đại học Đà Nẵng.\r\nCác thành viên:\r\n1. Trần Ngọc Huy\r\n2. Nguyễn Kim Huy\r\n3. Trần Diệp Phương\r\n4. Trần Vũ Minh Triết\r\n\r\nĐăng ký tài khoản đặt chỗ [tại đây](https://github.com/truongduchuy910/PBL6).\r\n\r\n> \"Trích dẫn của ai đó\"\r\n`;\r\n\r\nexport default function Markdown({ navigation }) {\r\n  return (\r\n    <Container w=\"container.lg\" margin=\"auto\" mt=\"64px\" maxW=\"full\" px=\"8px\">\r\n      <Field>{content}</Field>\r\n      <Box w=\"100%\"></Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Container } from \"native-base\";\r\nimport { PostCreateSimple, PostItemDetail } from \"../ui/Post\";\r\nimport { PostListSimple } from \"../ui/Post\";\r\nimport { InteractionCommentListSimple } from \"../ui/Interactive/Comment\";\r\nexport default function Test({ navigation }) {\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n      <PostCreateSimple />\r\n      <PostListSimple first = {3}/>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Button, Box, VStack, Text } from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { BsFillCaretDownFill } from \"react-icons/bs\";\r\nimport { RiUser3Fill, RiDownloadCloudFill } from \"react-icons/ri\";\r\nimport { MdSettings } from \"react-icons/md\";\r\nimport { HiLockClosed } from \"react-icons/hi\";\r\nimport { UserSignOutButton } from \"../User\";\r\nimport { AuthContext } from '../Provider/Native'\r\nfunction UI({ navigation }) {\r\n  const [isOpenOptions, setIsOpenOptions] = useState(false);\r\n\r\n  const optionsHandler = () => {\r\n    setIsOpenOptions((prev) => !prev);\r\n  };\r\n  const currentUser = useContext(AuthContext).user\r\n  return (\r\n    <Box position=\"relative\" right=\"0\">\r\n      <Button\r\n        onPress={optionsHandler}\r\n        rounded=\"100\"\r\n        bgColor=\"gray.100\"\r\n        p=\"10px\"\r\n        _text={{ color: \"gray.400\", fontWeight: \"600\" }}\r\n      >\r\n        <BsFillCaretDownFill color=\"#a1a1aa\" />\r\n      </Button>\r\n      {isOpenOptions && (\r\n        <Box position=\"absolute\" top=\"40px\" right=\"0\" w=\"200px\">\r\n          <VStack\r\n            space=\"6px\"\r\n            bgColor=\"white\"\r\n            p=\"8px\"\r\n            rounded=\"8px\"\r\n            borderWidth=\"1px\"\r\n            borderColor=\"gray.100\"\r\n            alignItems=\"start\"\r\n          >\r\n            <Button\r\n              bgColor=\"white\"\r\n              leftIcon={<RiUser3Fill color=\"#22c55e\" />}\r\n              onPress={optionsHandler}\r\n            >\r\n              <Link to={{ screen: \"users\", params: { id: currentUser.id } }}>\r\n                <Text>Trang cá nhân</Text>\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              bgColor=\"white\"\r\n              leftIcon={<MdSettings color=\"#22c55e\" />}\r\n              onPress={optionsHandler}\r\n            >\r\n              <Link to={{ screen: \"userupdate\" }}>\r\n                <Text>Cài đặt</Text>\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              bgColor=\"white\"\r\n              leftIcon={<HiLockClosed color=\"#22c55e\" />}\r\n              onPress={optionsHandler}\r\n            >\r\n              <Link to={{ screen: \"updatepassword\" }}>\r\n                <Text>Đổi mật khẩu</Text>\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              bgColor=\"white\"\r\n              leftIcon={<RiDownloadCloudFill color=\"#22c55e\" />}\r\n              onPress={optionsHandler}\r\n            >\r\n              <Link to={{ screen: \"album\" }}>\r\n                <Text>Lưu</Text>\r\n              </Link>\r\n            </Button>\r\n\r\n            <UserSignOutButton navigation={navigation} />\r\n          </VStack>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { Box, Button, Text, Image, HStack } from \"native-base\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\nfunction UI(props) {\r\n  return (\r\n    <Button bgColor=\"white\" onPress={props.notificationHandler}>\r\n      <Link to={{ screen: \"users\" }}>\r\n        <HStack\r\n          space=\"12px\"\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          w=\"full\"\r\n          px=\"4px\"\r\n          alignItems=\"flex-start\"\r\n          justifyContent=\"flex-start\"\r\n          position=\"relative\"\r\n          zIndex=\"1\"\r\n        >\r\n          <Image\r\n            source={{\r\n              uri: props.item.imgUrl,\r\n            }}\r\n            alt=\"Profile image\"\r\n            size=\"40px\"\r\n            rounded=\"100\"\r\n            mt=\"4px\"\r\n          />\r\n          <Box>\r\n            <Text color=\"gray.900\" fontWeight=\"600\">\r\n              {props.item.user}\r\n            </Text>\r\n            <Text>{props.item.content}</Text>\r\n            <Text color=\"gray.400\" fontSize=\"12px\">\r\n              {props.item.time}\r\n            </Text>\r\n          </Box>\r\n        </HStack>\r\n      </Link>\r\n    </Button>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { Box, VStack } from \"native-base\";\r\nimport NotificationItemSimple from \"../Item/Simple\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    user: \"Nguyễn Kim Huy\",\r\n    imgUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719777/200960556_1184264562021915_3530694902678239694_n_u7mk8s.jpg\",\r\n    content: \"đã bình luận về bài viết của bạn.\",\r\n    time: \"2 giờ\",\r\n  },\r\n  {\r\n    id: 2,\r\n    user: \"Trần Diệp Phương\",\r\n    imgUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/190312313_2943016239348813_282704590362946930_n_pc3vbb.jpg\",\r\n    content: \"đã gửi lời mời kết bạn.\",\r\n    time: \"3 giờ\",\r\n  },\r\n  {\r\n    id: 3,\r\n    user: \"Trần Vũ Minh Triết\",\r\n    imgUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/156458382_874843366689762_6113705464882053665_n_tl05xu.jpg\",\r\n    content: \"đã chấp nhận lời mời kết bạn.\",\r\n    time: \"4 giờ\",\r\n  },\r\n  {\r\n    id: 4,\r\n    user: \"Trần Vũ Minh Triết\",\r\n    imgUrl:\r\n      \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1632719776/156458382_874843366689762_6113705464882053665_n_tl05xu.jpg\",\r\n    content: \"đã thích bài viết của bạn.\",\r\n    time: \"5 giờ\",\r\n  },\r\n];\r\n\r\nfunction UI(props) {\r\n  return (\r\n    <Box position=\"absolute\" top=\"10\" right=\"0\" w=\"300px\">\r\n      <VStack\r\n        py=\"8px\"\r\n        bgColor=\"white\"\r\n        rounded=\"8px\"\r\n        borderWidth=\"1px\"\r\n        borderColor=\"gray.100\"\r\n        alignItems=\"start\"\r\n      >\r\n        {data.map((item) => (\r\n          <NotificationItemSimple key={item.id} item={item} />\r\n        ))}\r\n      </VStack>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Box } from \"native-base\";\r\nimport { HiBell } from \"react-icons/hi\";\r\nimport NotificationListSimple from \"../List/Simple\";\r\n\r\nfunction UI() {\r\n  const [isOpenNotification, setIsOpenNotification] = useState(false);\r\n\r\n  const notificationHandler = () => {\r\n    setIsOpenNotification((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Box position=\"relative\" right=\"0\">\r\n      <Button\r\n        onPress={notificationHandler}\r\n        rounded=\"100\"\r\n        bgColor=\"gray.100\"\r\n        p=\"10px\"\r\n        _text={{ color: \"gray.400\", fontWeight: \"600\" }}\r\n      >\r\n        <HiBell color=\"#a1a1aa\" />\r\n      </Button>\r\n      {isOpenNotification && (\r\n        <NotificationListSimple notificationHandler={notificationHandler} />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { Box, Input, FormControl } from \"native-base\";\r\nimport { HiOutlineSearch } from \"react-icons/hi\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\nfunction UI({ navigation }) {\r\n  const submitHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      console.log(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box position=\"relative\" right=\"0\" display={[\"none\", \"none\", \"block\"]}>\r\n      <FormControl>\r\n        <Input\r\n          onKeyPress={submitHandler}\r\n          bgColor=\"white\"\r\n          px=\"2\"\r\n          py=\"1.5\"\r\n          pl=\"8\"\r\n          borderWidth=\"1\"\r\n          borderColor=\"gray.100\"\r\n          rounded=\"6\"\r\n          placeholder=\"Tìm kiếm trên Kilogram\"\r\n          fontFamily=\"Lexend_400Regular\"\r\n          fontSize=\"14\"\r\n          w=\"250px\"\r\n          _focus={{\r\n            borderColor: \"green.500\",\r\n          }}\r\n        />\r\n      </FormControl>\r\n      <Box position=\"absolute\" top=\"2.5\" left=\"2.5\" size=\"14\">\r\n        <HiOutlineSearch color=\"#a1a1aa\" />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default UI;\r\n","import React from \"react\";\r\nimport { Container, HStack, Box, Image } from \"native-base\";\r\nimport AuthController from \"../User/Auth/Controller\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { UserAuthShort } from \"../User\";\r\nimport Options from \"./Options\";\r\nimport { NotificationListToggle } from \"../Notification\";\r\nimport HeadersSearch from \"./Search\";\r\n\r\nfunction UI({ user, navigation, route, options, back }) {\r\n  return (\r\n    <Box\r\n      w=\"full\"\r\n      position=\"fixed\"\r\n      borderBottomWidth=\"1px\"\r\n      borderColor=\"gray.100\"\r\n      bgColor=\"white\"\r\n    >\r\n      <Container w=\"container.lg\" mx=\"auto\" maxW=\"full\" px=\"8px\">\r\n        <Box safeAreaTop pt=\"12px\" pb=\"8px\" boxSize=\"full\">\r\n          <HStack justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Link to={{ screen: \"home\" }}>\r\n              <Image\r\n                source={{\r\n                  uri:\r\n                    \"https://res.cloudinary.com/cloudinaryassets/image/upload/v1633593799/logo-header_qh37fo.svg\",\r\n                }}\r\n                alt=\"Logo\"\r\n                w=\"150px\"\r\n                h=\"40px\"\r\n              />\r\n            </Link>\r\n            {user && <HeadersSearch />}\r\n            {user && (\r\n              <HStack alignItems=\"center\" space=\"10px\">\r\n                <Box display={[\"none\", \"block\"]}>\r\n                  <UserAuthShort navigation={navigation} />\r\n                </Box>\r\n                <NotificationListToggle />\r\n                <Options navigation={navigation} />\r\n              </HStack>\r\n            )}\r\n          </HStack>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\nexport default function HeaderSimple(props) {\r\n  return <AuthController {...props} UI={UI} />;\r\n}\r\n","import React from \"react\";\r\nimport { NativeBaseProvider } from \"native-base\";\r\nimport { theme, useFonts } from \"./theme\";\r\nimport pages from \"./pages\";\r\n\r\nimport { ProviderNative } from \"./ui/Provider\";\r\nimport HeaderSimple from \"./ui/Headers/Simple\";\r\nimport { AppRegistry } from \"react-native\";\r\n\r\nfunction App() {\r\n  useFonts();\r\n  return (\r\n    <NativeBaseProvider theme={theme}>\r\n      <ProviderNative navigation={pages} header={HeaderSimple} />\r\n    </NativeBaseProvider>\r\n  );\r\n}\r\n\r\nAppRegistry.registerComponent(\"Kilogram\", () => App);\r\nexport default App;\r\n","import 'react-native-gesture-handler';\r\nimport { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n"],"sourceRoot":""}